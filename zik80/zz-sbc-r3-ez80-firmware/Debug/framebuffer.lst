Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -noglobalopt -nolocalcse -optsize -nomodsect 
                           A     3    ; -padbranch -debug -peephole -const=ROM 
                           A     4    	FILE	"..\FRAMEBUFFER.C"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    .PADBRANCH CCODE
                           A     8    	SEGMENT CODE
                           A     9    .BEGREC "NONAME0",4
                           A    10    .DEFINE "dr"
                           A    11    .VALUE 0
                           A    12    .CLASS 8
                           A    13    .TYPE 12
                           A    14    .ENDEF
                           A    15    .DEFINE "ddr"
                           A    16    .VALUE 1
                           A    17    .CLASS 8
                           A    18    .TYPE 12
                           A    19    .ENDEF
                           A    20    .DEFINE "alt1"
                           A    21    .VALUE 2
                           A    22    .CLASS 8
                           A    23    .TYPE 12
                           A    24    .ENDEF
                           A    25    .DEFINE "alt2"
                           A    26    .VALUE 3
                           A    27    .CLASS 8
                           A    28    .TYPE 12
                           A    29    .ENDEF
                           A    30    .ENDREC "NONAME0"
                           A    31    .BEGREC "NONAME1",10
                           A    32    .DEFINE "uartMode"
                           A    33    .VALUE 0
                           A    34    .CLASS 8
                           A    35    .TYPE 2
                           A    36    .ENDEF
                           A    37    .DEFINE "baudRate"
                           A    38    .VALUE 1
                           A    39    .CLASS 8
                           A    40    .TYPE 4
                           A    41    .ENDEF
                           A    42    .DEFINE "dataBits"
                           A    43    .VALUE 4
                           A    44    .CLASS 8
                           A    45    .TYPE 12
                           A    46    .ENDEF
                           A    47    .DEFINE "stopBits"
                           A    48    .VALUE 5
                           A    49    .CLASS 8
                           A    50    .TYPE 12
                           A    51    .ENDEF
                           A    52    .DEFINE "parity"
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   2


PC     Object              I  Line    Source framebuffer.src
                           A    53    .VALUE 6
                           A    54    .CLASS 8
                           A    55    .TYPE 12
                           A    56    .ENDEF
                           A    57    .DEFINE "fifoTriggerLevel"
                           A    58    .VALUE 7
                           A    59    .CLASS 8
                           A    60    .TYPE 12
                           A    61    .ENDEF
                           A    62    .DEFINE "hwFlowControl"
                           A    63    .VALUE 8
                           A    64    .CLASS 8
                           A    65    .TYPE 12
                           A    66    .ENDEF
                           A    67    .DEFINE "swFlowControl"
                           A    68    .VALUE 9
                           A    69    .CLASS 8
                           A    70    .TYPE 12
                           A    71    .ENDEF
                           A    72    .ENDREC "NONAME1"
                           A    73    .BEGREC "NONAME2",9
                           A    74    .DEFINE "pBuffer"
                           A    75    .VALUE 0
                           A    76    .CLASS 8
                           A    77    .TYPE 44
                           A    78    .ENDEF
                           A    79    .DEFINE "next_in"
                           A    80    .VALUE 3
                           A    81    .CLASS 8
                           A    82    .TYPE 13
                           A    83    .ENDEF
                           A    84    .DEFINE "next_out"
                           A    85    .VALUE 5
                           A    86    .CLASS 8
                           A    87    .TYPE 13
                           A    88    .ENDEF
                           A    89    .DEFINE "size"
                           A    90    .VALUE 7
                           A    91    .CLASS 8
                           A    92    .TYPE 13
                           A    93    .ENDEF
                           A    94    .ENDREC "NONAME2"
000000                     A    95    _delay_loop:
                           A    96    .DEFINE "_delay_loop"
                           A    97    
                           A    98    .VALUE _delay_loop
                           A    99    
                           A   100    .CLASS 3
                           A   101    
                           A   102    .TYPE 65
                           A   103    
                           A   104    .ENDEF
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   3


PC     Object              I  Line    Source framebuffer.src
                           A   105    
                           A   106    .BEGFUNC "delay_loop",17,"_delay_loop"
                           A   107    
                           A   108    .LINE 17
                           A   109    
                           A   110    .DEFINE "c"
                           A   111    
                           A   112    .CLASS 65
                           A   113    
                           A   114    .VALUE 6
                           A   115    
                           A   116    .TYPE 14
                           A   117    
000000 DDE5                A   118    	PUSH	IX
000002 DD210000 00         A   119    	LD	IX,0
000007 DD39                A   120    	ADD	IX,SP
                           A   121    .ENDEF
                           A   122    
000009                     A   123    L_1:
                           A   124    .LINE 18
                           A   125    
000009 DD2706              A   126    	LD	HL,(IX+6)
00000C CD 00 00 00         A   127    	CALL	__icmpzero
000010 28 0D 00            A   128    	JR	Z,L_3
                           A   129    .LINE 19
                           A   130    
000013 DD3106              A   131    	LD	IY,(IX+6)
000016 ED33FF              A   132    	LEA	IY,IY+-1
000019 DD3E06              A   133    	LD	(IX+6),IY
                           A   134    .LINE 20
                           A   135    
00001C 18 EB 00            A   136    	JR	L_1
00001F                     A   137    L_3:
                           A   138    .LINE 21
                           A   139    
00001F DDF9                A   140    	LD	SP,IX
000021 DDE1                A   141    	POP	IX
000023 C9                  A   142    	RET	
                           A   143    
                           A   144    
                           A   145    ;**************************** _delay_loop *****
                           A   146    ;Name                         Addr/Register   S
                           A   147    ;c                                     IX+6    
                           A   148    
                           A   149    
                           A   150    ; Stack Frame Size: 9 (bytes)
                           A   151    ;       Spill Code: 0 (instruction)
                           A   152    
                           A   153    
                           A   154    .ENDFUNC "delay_loop",21,"_delay_loop"
                           A   155    ;    1	#include <eZ80.h>
                           A   156    ;    2	
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   4


PC     Object              I  Line    Source framebuffer.src
                           A   157    ;    3	#include "skeelib.h"
                           A   158    ;    4	#include "framebuffer.h"
                           A   159    ;    5	
                           A   160    ;    6	#include <string.h> // memcpy
                           A   161    ;    7	
                           A   162    ;    8	void fb_render_rect_filled ( UINT8 *fb,
000024                     A   163    _fb_render_rect_filled:
                           A   164    .DEFINE "_fb_render_rect_filled"
                           A   165    
                           A   166    .VALUE _fb_render_rect_filled
                           A   167    
                           A   168    .CLASS 2
                           A   169    
                           A   170    .TYPE 65
                           A   171    
                           A   172    .ENDEF
                           A   173    
                           A   174    .BEGFUNC "fb_render_rect_filled",8,"_fb_render_
                           A   175    
                           A   176    .LINE 8
                           A   177    
                           A   178    .DEFINE "fb"
                           A   179    
                           A   180    .CLASS 65
                           A   181    
                           A   182    .VALUE 6
                           A   183    
                           A   184    .TYPE 44
                           A   185    
                           A   186    .ENDEF
                           A   187    
                           A   188    .DEFINE "x"
                           A   189    
                           A   190    .CLASS 65
                           A   191    
                           A   192    .VALUE 9
                           A   193    
                           A   194    .TYPE 12
                           A   195    
                           A   196    .ENDEF
                           A   197    
                           A   198    .DEFINE "y"
                           A   199    
                           A   200    .CLASS 65
                           A   201    
                           A   202    .VALUE 12
                           A   203    
                           A   204    .TYPE 12
                           A   205    
                           A   206    .ENDEF
                           A   207    
                           A   208    .DEFINE "w"
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   5


PC     Object              I  Line    Source framebuffer.src
                           A   209    
                           A   210    .CLASS 65
                           A   211    
                           A   212    .VALUE 15
                           A   213    
                           A   214    .TYPE 12
                           A   215    
                           A   216    .ENDEF
                           A   217    
                           A   218    .DEFINE "h"
                           A   219    
                           A   220    .CLASS 65
                           A   221    
                           A   222    .VALUE 18
                           A   223    
                           A   224    .TYPE 12
                           A   225    
                           A   226    .ENDEF
                           A   227    
                           A   228    .DEFINE "rgb"
                           A   229    
                           A   230    .CLASS 65
                           A   231    
                           A   232    .VALUE 21
                           A   233    
                           A   234    .TYPE 12
                           A   235    
                           A   236    .ENDEF
                           A   237    
                           A   238    .DEFINE "ty"
                           A   239    
                           A   240    .CLASS 65
                           A   241    
                           A   242    .VALUE -1
                           A   243    
                           A   244    .TYPE 12
                           A   245    
                           A   246    .ENDEF
                           A   247    
                           A   248    .DEFINE "tx"
                           A   249    
                           A   250    .CLASS 65
                           A   251    
                           A   252    .VALUE -2
                           A   253    
                           A   254    .TYPE 12
                           A   255    
                           A   256    .ENDEF
                           A   257    
                           A   258    .DEFINE "ty2"
                           A   259    
                           A   260    .CLASS 65
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   6


PC     Object              I  Line    Source framebuffer.src
                           A   261    
                           A   262    .VALUE -3
                           A   263    
                           A   264    .TYPE 12
                           A   265    
                           A   266    .ENDEF
                           A   267    
                           A   268    .DEFINE "t"
                           A   269    
                           A   270    .CLASS 65
                           A   271    
                           A   272    .VALUE -6
                           A   273    
                           A   274    .TYPE 44
                           A   275    
                           A   276    .ENDEF
                           A   277    
                           A   278    ;    9	  register UINT8 tx, ty;
                           A   279    ;   10	  register UINT8 ty2;
                           A   280    ;   11	  register UINT8 *t;
                           A   281    ;   12	
                           A   282    ;   13	  ty2 = y + h;
                           A   283    ;   14	
                           A   284    ;   15	  for ( ty = y; ty < ty2; ty++ ) {
                           A   285    ;   16	    t = fb + ( ty * FBWIDTH ) + x; 
                           A   286    ;   17	    for ( tx = 0; tx < w; tx++ ) {
                           A   287    ;   18	      *t++ = rgb;
                           A   288    ;   19	      //__asm__("nop");
                           A   289    ;   20	    } // x
                           A   290    ;   21	  } // y
000024 DDE5                A   291    	PUSH	IX
000026 DD210000 00         A   292    	LD	IX,0
00002B DD39                A   293    	ADD	IX,SP
00002D C5                  A   294    	PUSH	BC
00002E C5                  A   295    	PUSH	BC
00002F C5                  A   296    	PUSH	BC
                           A   297    .LINE 13
                           A   298    
000030 DD7E0C              A   299    	LD	A,(IX+12)
000033 DD8612              A   300    	ADD	A,(IX+18)
000036 DD77FD              A   301    	LD	(IX+-3),A
000039 18 0B 00            A   302    	JR	L_11
00003C                     A   303    L_12:
                           A   304    .LINE 15
                           A   305    
00003C DD7EFF              A   306    	LD	A,(IX+-1)
00003F DDBEFD              A   307    	CP	A,(IX+-3)
000042 38 0B               A   308    	JR	C,L_14
000044 18 5A               A   309    	JR	L_15
000046                     A   310    L_11:
000046 DD7E0C              A   311    	LD	A,(IX+12)
000049 DD77FF              A   312    	LD	(IX+-1),A
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   7


PC     Object              I  Line    Source framebuffer.src
00004C 18 EE 00            A   313    	JR	L_12
00004F                     A   314    L_14:
                           A   315    .LINE 16
                           A   316    
00004F DD7EFF              A   317    	LD	A,(IX+-1)
000052 B7ED62              A   318    	UEXT	HL
000055 6F                  A   319    	LD	L,A
000056 3E08                A   320    	LD	A,8
000058 CD 00 00 00         A   321    	CALL	__ishl_b
00005C DD0706              A   322    	LD	BC,(IX+6)
00005F 09                  A   323    	ADD	HL,BC
000060 E5C1                A   324    	LD	BC,HL
000062 DD7E09              A   325    	LD	A,(IX+9)
000065 B7ED62              A   326    	UEXT	HL
000068 6F                  A   327    	LD	L,A
000069 09                  A   328    	ADD	HL,BC
00006A DD2FFA              A   329    	LD	(IX+-6),HL
00006D 18 0B 00            A   330    	JR	L_7
000070                     A   331    L_8:
                           A   332    .LINE 17
                           A   333    
000070 DD7EFE              A   334    	LD	A,(IX+-2)
000073 DDBE0F              A   335    	CP	A,(IX+15)
000076 38 09               A   336    	JR	C,L_10
000078 18 20               A   337    	JR	L_13
00007A                     A   338    L_7:
00007A DD36FE00            A   339    	LD	(IX+-2),0
00007E 18 F0 00            A   340    	JR	L_8
000081                     A   341    L_10:
                           A   342    .LINE 18
                           A   343    
000081 DD07FA              A   344    	LD	BC,(IX+-6)
000084 DD0FF7              A   345    	LD	(IX+-9),BC
000087 C5E1                A   346    	LD	HL,BC
000089 DD7E15              A   347    	LD	A,(IX+21)
00008C 77                  A   348    	LD	(HL),A
00008D DD07FA              A   349    	LD	BC,(IX+-6)
000090 03                  A   350    	INC	BC
000091 DD0FFA              A   351    	LD	(IX+-6),BC
000094 DD34FE              A   352    	INC	(IX+-2)
                           A   353    .LINE 20
                           A   354    
000097 18 D7 00            A   355    	JR	L_8
00009A                     A   356    L_13:
                           A   357    .LINE 21
                           A   358    
00009A DD34FF              A   359    	INC	(IX+-1)
00009D 18 9D 00            A   360    	JR	L_12
                           A   361    ;   22	
                           A   362    ;   23	}
0000A0                     A   363    L_15:
                           A   364    .LINE 23
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   8


PC     Object              I  Line    Source framebuffer.src
                           A   365    
0000A0 DDF9                A   366    	LD	SP,IX
0000A2 DDE1                A   367    	POP	IX
0000A4 C9                  A   368    	RET	
                           A   369    
                           A   370    
                           A   371    ;**************************** _fb_render_rect_f
                           A   372    ;Name                         Addr/Register   S
                           A   373    ;t                                     IX-6    
                           A   374    ;ty2                                   IX-3    
                           A   375    ;tx                                    IX-2    
                           A   376    ;ty                                    IX-1    
                           A   377    ;rgb                                  IX+21    
                           A   378    ;h                                    IX+18    
                           A   379    ;w                                    IX+15    
                           A   380    ;y                                    IX+12    
                           A   381    ;x                                     IX+9    
                           A   382    ;fb                                    IX+6    
                           A   383    
                           A   384    
                           A   385    ; Stack Frame Size: 33 (bytes)
                           A   386    ;       Spill Code: 0 (instruction)
                           A   387    
                           A   388    
                           A   389    .ENDFUNC "fb_render_rect_filled",23,"_fb_render
                           A   390    ;   24	
                           A   391    ;   25	/* bresenham based line draw */
                           A   392    ;   26	// ripped from old zotlib and adapted t
                           A   393    ;   27	void zl_render_line ( UINT8 *bits, UINT
0000A5                     A   394    _zl_render_line:
                           A   395    .DEFINE "_zl_render_line"
                           A   396    
                           A   397    .VALUE _zl_render_line
                           A   398    
                           A   399    .CLASS 2
                           A   400    
                           A   401    .TYPE 65
                           A   402    
                           A   403    .ENDEF
                           A   404    
                           A   405    .BEGFUNC "zl_render_line",27,"_zl_render_line"
                           A   406    
                           A   407    .LINE 27
                           A   408    
                           A   409    .DEFINE "bits"
                           A   410    
                           A   411    .CLASS 65
                           A   412    
                           A   413    .VALUE 6
                           A   414    
                           A   415    .TYPE 44
                           A   416    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:   9


PC     Object              I  Line    Source framebuffer.src
                           A   417    .ENDEF
                           A   418    
                           A   419    .DEFINE "c"
                           A   420    
                           A   421    .CLASS 65
                           A   422    
                           A   423    .VALUE 9
                           A   424    
                           A   425    .TYPE 12
                           A   426    
                           A   427    .ENDEF
                           A   428    
                           A   429    .DEFINE "x0"
                           A   430    
                           A   431    .CLASS 65
                           A   432    
                           A   433    .VALUE 12
                           A   434    
                           A   435    .TYPE 13
                           A   436    
                           A   437    .ENDEF
                           A   438    
                           A   439    .DEFINE "y0"
                           A   440    
                           A   441    .CLASS 65
                           A   442    
                           A   443    .VALUE 15
                           A   444    
                           A   445    .TYPE 13
                           A   446    
                           A   447    .ENDEF
                           A   448    
                           A   449    .DEFINE "x1"
                           A   450    
                           A   451    .CLASS 65
                           A   452    
                           A   453    .VALUE 18
                           A   454    
                           A   455    .TYPE 13
                           A   456    
                           A   457    .ENDEF
                           A   458    
                           A   459    .DEFINE "y1"
                           A   460    
                           A   461    .CLASS 65
                           A   462    
                           A   463    .VALUE 21
                           A   464    
                           A   465    .TYPE 13
                           A   466    
                           A   467    .ENDEF
                           A   468    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  10


PC     Object              I  Line    Source framebuffer.src
                           A   469    .DEFINE "fraction"
                           A   470    
                           A   471    .CLASS 65
                           A   472    
                           A   473    .VALUE -2
                           A   474    
                           A   475    .TYPE 3
                           A   476    
                           A   477    .ENDEF
                           A   478    
                           A   479    .DEFINE "dy"
                           A   480    
                           A   481    .CLASS 65
                           A   482    
                           A   483    .VALUE -4
                           A   484    
                           A   485    .TYPE 3
                           A   486    
                           A   487    .ENDEF
                           A   488    
                           A   489    .DEFINE "dx"
                           A   490    
                           A   491    .CLASS 65
                           A   492    
                           A   493    .VALUE -6
                           A   494    
                           A   495    .TYPE 3
                           A   496    
                           A   497    .ENDEF
                           A   498    
                           A   499    .DEFINE "stepy"
                           A   500    
                           A   501    .CLASS 65
                           A   502    
                           A   503    .VALUE -8
                           A   504    
                           A   505    .TYPE 3
                           A   506    
                           A   507    .ENDEF
                           A   508    
                           A   509    .DEFINE "stepx"
                           A   510    
                           A   511    .CLASS 65
                           A   512    
                           A   513    .VALUE -10
                           A   514    
                           A   515    .TYPE 3
                           A   516    
                           A   517    .ENDEF
                           A   518    
0000A5 DDE5                A   519    	PUSH	IX
0000A7 DD210000 00         A   520    	LD	IX,0
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  11


PC     Object              I  Line    Source framebuffer.src
0000AC DD39                A   521    	ADD	IX,SP
0000AE C5                  A   522    	PUSH	BC
0000AF C5                  A   523    	PUSH	BC
0000B0 C5                  A   524    	PUSH	BC
0000B1 3B                  A   525    	DEC	SP
                           A   526    ;   28	  INT16 dy = y1 - y0;
                           A   527    .LINE 28
                           A   528    
0000B2 DD070F              A   529    	LD	BC,(IX+15)
0000B5 DD2715              A   530    	LD	HL,(IX+21)
0000B8 B7                  A   531    	OR	A,A
0000B9 40ED42              A   532    	SBC.SIS	HL,BC
0000BC DD75FC              A   533    	LD	(IX+-4),L
0000BF DD74FD              A   534    	LD	(IX+-3),H
                           A   535    ;   29	  INT16 dx = x1 - x0;
                           A   536    .LINE 29
                           A   537    
0000C2 DD070C              A   538    	LD	BC,(IX+12)
0000C5 DD2712              A   539    	LD	HL,(IX+18)
0000C8 B7                  A   540    	OR	A,A
0000C9 40ED42              A   541    	SBC.SIS	HL,BC
0000CC DD75FA              A   542    	LD	(IX+-6),L
0000CF DD74FB              A   543    	LD	(IX+-5),H
                           A   544    ;   30	  INT16 stepx, stepy;
                           A   545    ;   31	  INT16 fraction;
                           A   546    ;   32	
                           A   547    ;   33	  if (dy < 0) {
                           A   548    .LINE 33
                           A   549    
0000D2 DD27FC              A   550    	LD	HL,(IX+-4)
0000D5 CD 00 00 00         A   551    	CALL	__scmpzero
0000D9 CD 00 00 00         A   552    	CALL	__setflag
0000DD F2 FA 00 00 00      A   553    	JP	P,L_17
                           A   554    ;   34	    dy = -dy;
                           A   555    .LINE 34
                           A   556    
0000E2 DD27FC              A   557    	LD	HL,(IX+-4)
0000E5 CD 00 00 00         A   558    	CALL	__sneg
0000E9 DD75FC              A   559    	LD	(IX+-4),L
0000EC DD74FD              A   560    	LD	(IX+-3),H
                           A   561    ;   35	    stepy = - ( FBWIDTH );
                           A   562    .LINE 35
                           A   563    
0000EF DD36F800            A   564    	LD	(IX+-8),0
0000F3 DD36F9FF            A   565    	LD	(IX+-7),255
                           A   566    ;   36	  } else {
                           A   567    .LINE 36
                           A   568    
0000F7 18 09 00            A   569    	JR	L_20
0000FA                     A   570    L_17:
                           A   571    ;   37	    stepy = ( FBWIDTH );
                           A   572    .LINE 37
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  12


PC     Object              I  Line    Source framebuffer.src
                           A   573    
0000FA DD36F800            A   574    	LD	(IX+-8),0
0000FE DD36F901            A   575    	LD	(IX+-7),1
                           A   576    ;   38	  }
000102                     A   577    L_20:
                           A   578    .LINE 38
                           A   579    
                           A   580    ;   39	
                           A   581    ;   40	  if (dx < 0) {
                           A   582    .LINE 40
                           A   583    
000102 DD27FA              A   584    	LD	HL,(IX+-6)
000105 CD 00 00 00         A   585    	CALL	__scmpzero
000109 CD 00 00 00         A   586    	CALL	__setflag
00010D F2 2A 01 00 00      A   587    	JP	P,L_19
                           A   588    ;   41	    dx = -dx;
                           A   589    .LINE 41
                           A   590    
000112 DD27FA              A   591    	LD	HL,(IX+-6)
000115 CD 00 00 00         A   592    	CALL	__sneg
000119 DD75FA              A   593    	LD	(IX+-6),L
00011C DD74FB              A   594    	LD	(IX+-5),H
                           A   595    ;   42	    stepx = -1;
                           A   596    .LINE 42
                           A   597    
00011F DD36F6FF            A   598    	LD	(IX+-10),255
000123 DD36F7FF            A   599    	LD	(IX+-9),255
                           A   600    ;   43	  } else {
                           A   601    .LINE 43
                           A   602    
000127 18 09 00            A   603    	JR	L_21
00012A                     A   604    L_19:
                           A   605    ;   44	    stepx = 1;
                           A   606    .LINE 44
                           A   607    
00012A DD36F601            A   608    	LD	(IX+-10),1
00012E DD36F700            A   609    	LD	(IX+-9),0
                           A   610    ;   45	  }
000132                     A   611    L_21:
                           A   612    .LINE 45
                           A   613    
                           A   614    ;   46	
                           A   615    ;   47	  dy <<= 1;
                           A   616    .LINE 47
                           A   617    
000132 DD27FC              A   618    	LD	HL,(IX+-4)
000135 29                  A   619    	ADD	HL,HL
000136 DD75FC              A   620    	LD	(IX+-4),L
000139 DD74FD              A   621    	LD	(IX+-3),H
                           A   622    ;   48	  dx <<= 1;
                           A   623    .LINE 48
                           A   624    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  13


PC     Object              I  Line    Source framebuffer.src
00013C DD27FA              A   625    	LD	HL,(IX+-6)
00013F 29                  A   626    	ADD	HL,HL
000140 DD75FA              A   627    	LD	(IX+-6),L
000143 DD74FB              A   628    	LD	(IX+-5),H
                           A   629    ;   49	
                           A   630    ;   50	  y0 *= ( FBWIDTH );
                           A   631    .LINE 50
                           A   632    
000146 DD270F              A   633    	LD	HL,(IX+15)
000149 65                  A   634    	LD	H,L
00014A 2E00                A   635    	LD	L,0
00014C DD750F              A   636    	LD	(IX+15),L
00014F DD7410              A   637    	LD	(IX+16),H
                           A   638    ;   51	  y1 *= ( FBWIDTH );
                           A   639    .LINE 51
                           A   640    
000152 DD2715              A   641    	LD	HL,(IX+21)
000155 65                  A   642    	LD	H,L
000156 2E00                A   643    	LD	L,0
000158 DD7515              A   644    	LD	(IX+21),L
00015B DD7416              A   645    	LD	(IX+22),H
                           A   646    ;   52	
                           A   647    ;   53	  bits [ x0 + y0 ] = c;
                           A   648    .LINE 53
                           A   649    
00015E DD070C              A   650    	LD	BC,(IX+12)
000161 CD 00 00 00         A   651    	CALL	__stoiu
000165 E5D1                A   652    	LD	DE,HL
000167 DD070F              A   653    	LD	BC,(IX+15)
00016A CD 00 00 00         A   654    	CALL	__stoiu
00016E 19                  A   655    	ADD	HL,DE
00016F DD0706              A   656    	LD	BC,(IX+6)
000172 09                  A   657    	ADD	HL,BC
000173 DD7E09              A   658    	LD	A,(IX+9)
000176 77                  A   659    	LD	(HL),A
                           A   660    ;   54	
                           A   661    ;   55	  if (dx > dy) {
                           A   662    .LINE 55
                           A   663    
000177 DD07FA              A   664    	LD	BC,(IX+-6)
00017A DD27FC              A   665    	LD	HL,(IX+-4)
00017D B7                  A   666    	OR	A,A
00017E 40ED42              A   667    	SBC.SIS	HL,BC
000181 CD 00 00 00         A   668    	CALL	__setflag
000185 F2 1B 02 00 00      A   669    	JP	P,L_31
                           A   670    ;   56	    fraction = dy - (dx >> 1);
                           A   671    .LINE 56
                           A   672    
00018A DD07FA              A   673    	LD	BC,(IX+-6)
00018D CD 00 00 00         A   674    	CALL	__stoi
000191 3E01                A   675    	LD	A,1
000193 CD 00 00 00         A   676    	CALL	__ishrs_b
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  14


PC     Object              I  Line    Source framebuffer.src
000197 E5C1                A   677    	LD	BC,HL
000199 DD27FC              A   678    	LD	HL,(IX+-4)
00019C B7                  A   679    	OR	A,A
00019D 40ED42              A   680    	SBC.SIS	HL,BC
0001A0 DD75FE              A   681    	LD	(IX+-2),L
0001A3 DD74FF              A   682    	LD	(IX+-1),H
                           A   683    ;   57	    while (x0 != x1) {
0001A6                     A   684    L_24:
                           A   685    .LINE 57
                           A   686    
0001A6 DD0712              A   687    	LD	BC,(IX+18)
0001A9 DD270C              A   688    	LD	HL,(IX+12)
0001AC B7                  A   689    	OR	A,A
0001AD 40ED42              A   690    	SBC.SIS	HL,BC
0001B0 CA AA 02 00 00      A   691    	JR	Z,L_32
                           A   692    ;   58	      if (fraction >= 0) {
                           A   693    .LINE 58
                           A   694    
0001B5 DD27FE              A   695    	LD	HL,(IX+-2)
0001B8 CD 00 00 00         A   696    	CALL	__scmpzero
0001BC CD 00 00 00         A   697    	CALL	__setflag
0001C0 FA E3 01 00 00      A   698    	JP	M,L_23
                           A   699    ;   59		y0 += stepy;
                           A   700    .LINE 59
                           A   701    
0001C5 DD070F              A   702    	LD	BC,(IX+15)
0001C8 DD27F8              A   703    	LD	HL,(IX+-8)
0001CB 4009                A   704    	ADD.SIS	HL,BC
0001CD DD750F              A   705    	LD	(IX+15),L
0001D0 DD7410              A   706    	LD	(IX+16),H
                           A   707    ;   60		fraction -= dx;
                           A   708    .LINE 60
                           A   709    
0001D3 DD07FA              A   710    	LD	BC,(IX+-6)
0001D6 DD27FE              A   711    	LD	HL,(IX+-2)
0001D9 B7                  A   712    	OR	A,A
0001DA 40ED42              A   713    	SBC.SIS	HL,BC
0001DD DD75FE              A   714    	LD	(IX+-2),L
0001E0 DD74FF              A   715    	LD	(IX+-1),H
                           A   716    ;   61	      }
0001E3                     A   717    L_23:
                           A   718    .LINE 61
                           A   719    
                           A   720    ;   62	      x0 += stepx;
                           A   721    .LINE 62
                           A   722    
0001E3 DD070C              A   723    	LD	BC,(IX+12)
0001E6 DD27F6              A   724    	LD	HL,(IX+-10)
0001E9 4009                A   725    	ADD.SIS	HL,BC
0001EB DD750C              A   726    	LD	(IX+12),L
0001EE DD740D              A   727    	LD	(IX+13),H
                           A   728    ;   63	      fraction += dy;
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  15


PC     Object              I  Line    Source framebuffer.src
                           A   729    .LINE 63
                           A   730    
0001F1 DD07FC              A   731    	LD	BC,(IX+-4)
0001F4 DD27FE              A   732    	LD	HL,(IX+-2)
0001F7 4009                A   733    	ADD.SIS	HL,BC
0001F9 DD75FE              A   734    	LD	(IX+-2),L
0001FC DD74FF              A   735    	LD	(IX+-1),H
                           A   736    ;   64	      bits [ x0 + y0 ] = c;
                           A   737    .LINE 64
                           A   738    
0001FF DD070C              A   739    	LD	BC,(IX+12)
000202 CD 00 00 00         A   740    	CALL	__stoiu
000206 E5D1                A   741    	LD	DE,HL
000208 DD070F              A   742    	LD	BC,(IX+15)
00020B CD 00 00 00         A   743    	CALL	__stoiu
00020F 19                  A   744    	ADD	HL,DE
000210 DD0706              A   745    	LD	BC,(IX+6)
000213 09                  A   746    	ADD	HL,BC
000214 DD7E09              A   747    	LD	A,(IX+9)
000217 77                  A   748    	LD	(HL),A
                           A   749    ;   65	    }
                           A   750    .LINE 65
                           A   751    
000218 18 8C 00            A   752    	JR	L_24
                           A   753    ;   66	  } else {
00021B                     A   754    L_31:
                           A   755    .LINE 66
                           A   756    
                           A   757    ;   67	    fraction = dx - (dy >> 1);
                           A   758    .LINE 67
                           A   759    
00021B DD07FC              A   760    	LD	BC,(IX+-4)
00021E CD 00 00 00         A   761    	CALL	__stoi
000222 3E01                A   762    	LD	A,1
000224 CD 00 00 00         A   763    	CALL	__ishrs_b
000228 E5C1                A   764    	LD	BC,HL
00022A DD27FA              A   765    	LD	HL,(IX+-6)
00022D B7                  A   766    	OR	A,A
00022E 40ED42              A   767    	SBC.SIS	HL,BC
000231 DD75FE              A   768    	LD	(IX+-2),L
000234 DD74FF              A   769    	LD	(IX+-1),H
                           A   770    ;   68	    while (y0 != y1) {
000237                     A   771    L_28:
                           A   772    .LINE 68
                           A   773    
000237 DD0715              A   774    	LD	BC,(IX+21)
00023A DD270F              A   775    	LD	HL,(IX+15)
00023D B7                  A   776    	OR	A,A
00023E 40ED42              A   777    	SBC.SIS	HL,BC
000241 28 67 00            A   778    	JR	Z,L_32
                           A   779    ;   69	      if (fraction >= 0) {
                           A   780    .LINE 69
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  16


PC     Object              I  Line    Source framebuffer.src
                           A   781    
000244 DD27FE              A   782    	LD	HL,(IX+-2)
000247 CD 00 00 00         A   783    	CALL	__scmpzero
00024B CD 00 00 00         A   784    	CALL	__setflag
00024F FA 72 02 00 00      A   785    	JP	M,L_27
                           A   786    ;   70		x0 += stepx;
                           A   787    .LINE 70
                           A   788    
000254 DD070C              A   789    	LD	BC,(IX+12)
000257 DD27F6              A   790    	LD	HL,(IX+-10)
00025A 4009                A   791    	ADD.SIS	HL,BC
00025C DD750C              A   792    	LD	(IX+12),L
00025F DD740D              A   793    	LD	(IX+13),H
                           A   794    ;   71		fraction -= dy;
                           A   795    .LINE 71
                           A   796    
000262 DD07FC              A   797    	LD	BC,(IX+-4)
000265 DD27FE              A   798    	LD	HL,(IX+-2)
000268 B7                  A   799    	OR	A,A
000269 40ED42              A   800    	SBC.SIS	HL,BC
00026C DD75FE              A   801    	LD	(IX+-2),L
00026F DD74FF              A   802    	LD	(IX+-1),H
                           A   803    ;   72	      }
000272                     A   804    L_27:
                           A   805    .LINE 72
                           A   806    
                           A   807    ;   73	      y0 += stepy;
                           A   808    .LINE 73
                           A   809    
000272 DD070F              A   810    	LD	BC,(IX+15)
000275 DD27F8              A   811    	LD	HL,(IX+-8)
000278 4009                A   812    	ADD.SIS	HL,BC
00027A DD750F              A   813    	LD	(IX+15),L
00027D DD7410              A   814    	LD	(IX+16),H
                           A   815    ;   74	      fraction += dx;
                           A   816    .LINE 74
                           A   817    
000280 DD07FA              A   818    	LD	BC,(IX+-6)
000283 DD27FE              A   819    	LD	HL,(IX+-2)
000286 4009                A   820    	ADD.SIS	HL,BC
000288 DD75FE              A   821    	LD	(IX+-2),L
00028B DD74FF              A   822    	LD	(IX+-1),H
                           A   823    ;   75	      bits [ x0 + y0 ] = c;
                           A   824    .LINE 75
                           A   825    
00028E DD070C              A   826    	LD	BC,(IX+12)
000291 CD 00 00 00         A   827    	CALL	__stoiu
000295 E5D1                A   828    	LD	DE,HL
000297 DD070F              A   829    	LD	BC,(IX+15)
00029A CD 00 00 00         A   830    	CALL	__stoiu
00029E 19                  A   831    	ADD	HL,DE
00029F DD0706              A   832    	LD	BC,(IX+6)
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  17


PC     Object              I  Line    Source framebuffer.src
0002A2 09                  A   833    	ADD	HL,BC
0002A3 DD7E09              A   834    	LD	A,(IX+9)
0002A6 77                  A   835    	LD	(HL),A
                           A   836    ;   76	    }
                           A   837    .LINE 76
                           A   838    
0002A7 18 8E 00            A   839    	JR	L_28
                           A   840    ;   77	  }
0002AA                     A   841    L_32:
                           A   842    .LINE 77
                           A   843    
                           A   844    ;   78	
                           A   845    ;   79	  return;
                           A   846    ;   80	}
                           A   847    .LINE 80
                           A   848    
0002AA DDF9                A   849    	LD	SP,IX
0002AC DDE1                A   850    	POP	IX
0002AE C9                  A   851    	RET	
                           A   852    
                           A   853    
                           A   854    ;**************************** _zl_render_line *
                           A   855    ;Name                         Addr/Register   S
                           A   856    ;stepx                                IX-10    
                           A   857    ;stepy                                 IX-8    
                           A   858    ;dx                                    IX-6    
                           A   859    ;dy                                    IX-4    
                           A   860    ;fraction                              IX-2    
                           A   861    ;y1                                   IX+21    
                           A   862    ;x1                                   IX+18    
                           A   863    ;y0                                   IX+15    
                           A   864    ;x0                                   IX+12    
                           A   865    ;c                                     IX+9    
                           A   866    ;bits                                  IX+6    
                           A   867    
                           A   868    
                           A   869    ; Stack Frame Size: 34 (bytes)
                           A   870    ;       Spill Code: 0 (instruction)
                           A   871    
                           A   872    
                           A   873    .ENDFUNC "zl_render_line",80,"_zl_render_line"
                           A   874    ;   81	
                           A   875    ;   82	void zl_render_blit32 ( UINT8 *from, UI
                           A   876    ;   83	                        UINT8 x1, UINT8
                           A   877    ;   84	                        UINT8 to_x, UIN
                           A   878    ;   85	{
0002AF                     A   879    _zl_render_blit32:
                           A   880    .DEFINE "_zl_render_blit32"
                           A   881    
                           A   882    .VALUE _zl_render_blit32
                           A   883    
                           A   884    .CLASS 2
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  18


PC     Object              I  Line    Source framebuffer.src
                           A   885    
                           A   886    .TYPE 65
                           A   887    
                           A   888    .ENDEF
                           A   889    
                           A   890    .BEGFUNC "zl_render_blit32",85,"_zl_render_blit
                           A   891    
                           A   892    .LINE 85
                           A   893    
                           A   894    .DEFINE "from"
                           A   895    
                           A   896    .CLASS 65
                           A   897    
                           A   898    .VALUE 6
                           A   899    
                           A   900    .TYPE 44
                           A   901    
                           A   902    .ENDEF
                           A   903    
                           A   904    .DEFINE "to"
                           A   905    
                           A   906    .CLASS 65
                           A   907    
                           A   908    .VALUE 9
                           A   909    
                           A   910    .TYPE 44
                           A   911    
                           A   912    .ENDEF
                           A   913    
                           A   914    .DEFINE "x1"
                           A   915    
                           A   916    .CLASS 65
                           A   917    
                           A   918    .VALUE 12
                           A   919    
                           A   920    .TYPE 12
                           A   921    
                           A   922    .ENDEF
                           A   923    
                           A   924    .DEFINE "y1"
                           A   925    
                           A   926    .CLASS 65
                           A   927    
                           A   928    .VALUE 15
                           A   929    
                           A   930    .TYPE 12
                           A   931    
                           A   932    .ENDEF
                           A   933    
                           A   934    .DEFINE "w"
                           A   935    
                           A   936    .CLASS 65
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  19


PC     Object              I  Line    Source framebuffer.src
                           A   937    
                           A   938    .VALUE 18
                           A   939    
                           A   940    .TYPE 12
                           A   941    
                           A   942    .ENDEF
                           A   943    
                           A   944    .DEFINE "h"
                           A   945    
                           A   946    .CLASS 65
                           A   947    
                           A   948    .VALUE 21
                           A   949    
                           A   950    .TYPE 12
                           A   951    
                           A   952    .ENDEF
                           A   953    
                           A   954    .DEFINE "to_x"
                           A   955    
                           A   956    .CLASS 65
                           A   957    
                           A   958    .VALUE 24
                           A   959    
                           A   960    .TYPE 12
                           A   961    
                           A   962    .ENDEF
                           A   963    
                           A   964    .DEFINE "to_y"
                           A   965    
                           A   966    .CLASS 65
                           A   967    
                           A   968    .VALUE 27
                           A   969    
                           A   970    .TYPE 12
                           A   971    
                           A   972    .ENDEF
                           A   973    
                           A   974    .DEFINE "vfromline"
                           A   975    
                           A   976    .CLASS 65
                           A   977    
                           A   978    .VALUE -3
                           A   979    
                           A   980    .TYPE 44
                           A   981    
                           A   982    .ENDEF
                           A   983    
                           A   984    .DEFINE "vtoline"
                           A   985    
                           A   986    .CLASS 65
                           A   987    
                           A   988    .VALUE -6
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  20


PC     Object              I  Line    Source framebuffer.src
                           A   989    
                           A   990    .TYPE 44
                           A   991    
                           A   992    .ENDEF
                           A   993    
                           A   994    .DEFINE "y"
                           A   995    
                           A   996    .CLASS 65
                           A   997    
                           A   998    .VALUE -7
                           A   999    
                           A  1000    .TYPE 12
                           A  1001    
                           A  1002    .ENDEF
                           A  1003    
                           A  1004    .DEFINE "x"
                           A  1005    
                           A  1006    .CLASS 65
                           A  1007    
                           A  1008    .VALUE -8
                           A  1009    
                           A  1010    .TYPE 12
                           A  1011    
                           A  1012    .ENDEF
                           A  1013    
                           A  1014    .DEFINE "x2"
                           A  1015    
                           A  1016    .CLASS 65
                           A  1017    
                           A  1018    .VALUE -9
                           A  1019    
                           A  1020    .TYPE 12
                           A  1021    
                           A  1022    .ENDEF
                           A  1023    
                           A  1024    .DEFINE "vtoiter"
                           A  1025    
                           A  1026    .CLASS 65
                           A  1027    
                           A  1028    .VALUE -12
                           A  1029    
                           A  1030    .TYPE 47
                           A  1031    
                           A  1032    .ENDEF
                           A  1033    
                           A  1034    .DEFINE "vfromiter"
                           A  1035    
                           A  1036    .CLASS 65
                           A  1037    
                           A  1038    .VALUE -15
                           A  1039    
                           A  1040    .TYPE 47
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  21


PC     Object              I  Line    Source framebuffer.src
                           A  1041    
                           A  1042    .ENDEF
                           A  1043    
                           A  1044    .DEFINE "y2"
                           A  1045    
                           A  1046    .CLASS 65
                           A  1047    
                           A  1048    .VALUE -16
                           A  1049    
                           A  1050    .TYPE 12
                           A  1051    
                           A  1052    .ENDEF
                           A  1053    
0002AF DDE5                A  1054    	PUSH	IX
0002B1 DD210000 00         A  1055    	LD	IX,0
0002B6 DD39                A  1056    	ADD	IX,SP
0002B8 ED22EA              A  1057    	LEA	HL,IX+-22
0002BB F9                  A  1058    	LD	SP,HL
                           A  1059    ;   86	  UINT8 x2 = x1 + w;
                           A  1060    .LINE 86
                           A  1061    
0002BC DD7E0C              A  1062    	LD	A,(IX+12)
0002BF DD8612              A  1063    	ADD	A,(IX+18)
0002C2 DD77F7              A  1064    	LD	(IX+-9),A
                           A  1065    ;   87	  UINT8 y2 = y1 + h;
                           A  1066    .LINE 87
                           A  1067    
0002C5 DD7E0F              A  1068    	LD	A,(IX+15)
0002C8 DD8615              A  1069    	ADD	A,(IX+21)
0002CB DD77F0              A  1070    	LD	(IX+-16),A
                           A  1071    ;   88	  UINT8 x, y;
                           A  1072    ;   89	  UINT8 *vfromline = from;
                           A  1073    .LINE 89
                           A  1074    
0002CE DD0706              A  1075    	LD	BC,(IX+6)
0002D1 DD0FFD              A  1076    	LD	(IX+-3),BC
                           A  1077    ;   90	  UINT32 *vfromiter;
                           A  1078    ;   91	  UINT8 *vtoline = to;
                           A  1079    .LINE 91
                           A  1080    
0002D4 DD0709              A  1081    	LD	BC,(IX+9)
0002D7 DD0FFA              A  1082    	LD	(IX+-6),BC
                           A  1083    ;   92	  UINT32 *vtoiter;
                           A  1084    ;   93	
                           A  1085    ;   94	  vfromline += ( y1 * FBWIDTH );
                           A  1086    .LINE 94
                           A  1087    
0002DA DD7E0F              A  1088    	LD	A,(IX+15)
0002DD B7ED62              A  1089    	UEXT	HL
0002E0 6F                  A  1090    	LD	L,A
0002E1 3E08                A  1091    	LD	A,8
0002E3 CD 00 00 00         A  1092    	CALL	__ishl_b
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  22


PC     Object              I  Line    Source framebuffer.src
0002E7 DD07FD              A  1093    	LD	BC,(IX+-3)
0002EA 09                  A  1094    	ADD	HL,BC
0002EB DD2FFD              A  1095    	LD	(IX+-3),HL
                           A  1096    ;   95	  vfromline += x1;
                           A  1097    .LINE 95
                           A  1098    
0002EE DD7E0C              A  1099    	LD	A,(IX+12)
0002F1 B7ED62              A  1100    	UEXT	HL
0002F4 6F                  A  1101    	LD	L,A
0002F5 DD07FD              A  1102    	LD	BC,(IX+-3)
0002F8 09                  A  1103    	ADD	HL,BC
0002F9 DD2FFD              A  1104    	LD	(IX+-3),HL
                           A  1105    ;   96	
                           A  1106    ;   97	  vtoline += ( to_y * FBWIDTH );
                           A  1107    .LINE 97
                           A  1108    
0002FC DD7E1B              A  1109    	LD	A,(IX+27)
0002FF B7ED62              A  1110    	UEXT	HL
000302 6F                  A  1111    	LD	L,A
000303 3E08                A  1112    	LD	A,8
000305 CD 00 00 00         A  1113    	CALL	__ishl_b
000309 DD07FA              A  1114    	LD	BC,(IX+-6)
00030C 09                  A  1115    	ADD	HL,BC
00030D DD2FFA              A  1116    	LD	(IX+-6),HL
                           A  1117    ;   98	  vtoline += to_x;
                           A  1118    .LINE 98
                           A  1119    
000310 DD7E18              A  1120    	LD	A,(IX+24)
000313 B7ED62              A  1121    	UEXT	HL
000316 6F                  A  1122    	LD	L,A
000317 DD07FA              A  1123    	LD	BC,(IX+-6)
00031A 09                  A  1124    	ADD	HL,BC
00031B DD2FFA              A  1125    	LD	(IX+-6),HL
                           A  1126    ;   99	
                           A  1127    ;  100	  x1 >>= 2;
                           A  1128    .LINE 100
                           A  1129    
00031E DD7E0C              A  1130    	LD	A,(IX+12)
000321 B7ED62              A  1131    	UEXT	HL
000324 6F                  A  1132    	LD	L,A
000325 3E02                A  1133    	LD	A,2
000327 CD 00 00 00         A  1134    	CALL	__ishrs_b
00032B DD750C              A  1135    	LD	(IX+12),L
                           A  1136    ;  101	  x2 >>= 2;
                           A  1137    .LINE 101
                           A  1138    
00032E DD7EF7              A  1139    	LD	A,(IX+-9)
000331 B7ED62              A  1140    	UEXT	HL
000334 6F                  A  1141    	LD	L,A
000335 3E02                A  1142    	LD	A,2
000337 CD 00 00 00         A  1143    	CALL	__ishrs_b
00033B DD75F7              A  1144    	LD	(IX+-9),L
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  23


PC     Object              I  Line    Source framebuffer.src
00033E 18 0B 00            A  1145    	JR	L_43
                           A  1146    ;  102	
                           A  1147    ;  103	  for ( y = y1; y < y2; y++ ) {
000341                     A  1148    L_44:
                           A  1149    .LINE 103
                           A  1150    
000341 DD7EF9              A  1151    	LD	A,(IX+-7)
000344 DDBEF0              A  1152    	CP	A,(IX+-16)
000347 38 0B               A  1153    	JR	C,L_46
000349 18 7E               A  1154    	JR	L_47
00034B                     A  1155    L_43:
00034B DD7E0F              A  1156    	LD	A,(IX+15)
00034E DD77F9              A  1157    	LD	(IX+-7),A
000351 18 EE 00            A  1158    	JR	L_44
000354                     A  1159    L_46:
                           A  1160    ;  104	    vtoiter = (UINT32*) vtoline;
                           A  1161    .LINE 104
                           A  1162    
000354 DD07FA              A  1163    	LD	BC,(IX+-6)
000357 DD0FF4              A  1164    	LD	(IX+-12),BC
                           A  1165    ;  105	    vfromiter = (UINT32*) vfromline;
                           A  1166    .LINE 105
                           A  1167    
00035A DD07FD              A  1168    	LD	BC,(IX+-3)
00035D DD0FF1              A  1169    	LD	(IX+-15),BC
000360 18 0B 00            A  1170    	JR	L_38
                           A  1171    ;  106	
                           A  1172    ;  107	    for ( x = x1; x < x2; x++ ) {
000363                     A  1173    L_39:
                           A  1174    .LINE 107
                           A  1175    
000363 DD7EF8              A  1176    	LD	A,(IX+-8)
000366 DDBEF7              A  1177    	CP	A,(IX+-9)
000369 38 0B               A  1178    	JR	C,L_41
00036B 18 3E               A  1179    	JR	L_42
00036D                     A  1180    L_38:
00036D DD7E0C              A  1181    	LD	A,(IX+12)
000370 DD77F8              A  1182    	LD	(IX+-8),A
000373 18 EE 00            A  1183    	JR	L_39
000376                     A  1184    L_41:
                           A  1185    ;  108	      *vtoiter++ = *vfromiter++;
                           A  1186    .LINE 108
                           A  1187    
000376 DD07F1              A  1188    	LD	BC,(IX+-15)
000379 DD0FED              A  1189    	LD	(IX+-19),BC
00037C DD07F4              A  1190    	LD	BC,(IX+-12)
00037F DD0FEA              A  1191    	LD	(IX+-22),BC
000382 DD31ED              A  1192    	LD	IY,(IX+-19)
000385 C5E1                A  1193    	LD	HL,BC
000387 FD0700              A  1194    	LD	BC,(IY)
00038A FD7E03              A  1195    	LD	A,(IY+3)
00038D ED0F                A  1196    	LD	(HL),BC
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  24


PC     Object              I  Line    Source framebuffer.src
00038F 23                  A  1197    	INC	HL
000390 23                  A  1198    	INC	HL
000391 23                  A  1199    	INC	HL
000392 77                  A  1200    	LD	(HL),A
000393 DD31F1              A  1201    	LD	IY,(IX+-15)
000396 ED0304              A  1202    	LEA	BC,IY+4
000399 DD0FF1              A  1203    	LD	(IX+-15),BC
00039C DD31F4              A  1204    	LD	IY,(IX+-12)
00039F ED3304              A  1205    	LEA	IY,IY+4
0003A2 DD3EF4              A  1206    	LD	(IX+-12),IY
0003A5 DD34F8              A  1207    	INC	(IX+-8)
                           A  1208    ;  109	    }
                           A  1209    .LINE 109
                           A  1210    
0003A8 18 B9 00            A  1211    	JR	L_39
0003AB                     A  1212    L_42:
                           A  1213    ;  110	
                           A  1214    ;  111	    vtoline += FBWIDTH;
                           A  1215    .LINE 111
                           A  1216    
0003AB 01000100            A  1217    	LD	BC,256
0003AF DD27FA              A  1218    	LD	HL,(IX+-6)
0003B2 09                  A  1219    	ADD	HL,BC
0003B3 DD2FFA              A  1220    	LD	(IX+-6),HL
                           A  1221    ;  112	    vfromline += FBWIDTH;
                           A  1222    .LINE 112
                           A  1223    
0003B6 01000100            A  1224    	LD	BC,256
0003BA DD27FD              A  1225    	LD	HL,(IX+-3)
0003BD 09                  A  1226    	ADD	HL,BC
0003BE DD2FFD              A  1227    	LD	(IX+-3),HL
0003C1 DD34F9              A  1228    	INC	(IX+-7)
                           A  1229    ;  113	  }
                           A  1230    .LINE 113
                           A  1231    
0003C4 C3 41 03 00 00      A  1232    	JR	L_44
0003C9                     A  1233    L_47:
                           A  1234    ;  114	
                           A  1235    ;  115	  return;
                           A  1236    ;  116	}
                           A  1237    .LINE 116
                           A  1238    
0003C9 DDF9                A  1239    	LD	SP,IX
0003CB DDE1                A  1240    	POP	IX
0003CD C9                  A  1241    	RET	
                           A  1242    
                           A  1243    
                           A  1244    ;**************************** _zl_render_blit32
                           A  1245    ;Name                         Addr/Register   S
                           A  1246    ;y2                                   IX-16    
                           A  1247    ;vfromiter                            IX-15    
                           A  1248    ;vtoiter                              IX-12    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  25


PC     Object              I  Line    Source framebuffer.src
                           A  1249    ;x2                                    IX-9    
                           A  1250    ;x                                     IX-8    
                           A  1251    ;y                                     IX-7    
                           A  1252    ;vtoline                               IX-6    
                           A  1253    ;vfromline                             IX-3    
                           A  1254    ;to_y                                 IX+27    
                           A  1255    ;to_x                                 IX+24    
                           A  1256    ;h                                    IX+21    
                           A  1257    ;w                                    IX+18    
                           A  1258    ;y1                                   IX+15    
                           A  1259    ;x1                                   IX+12    
                           A  1260    ;to                                    IX+9    
                           A  1261    ;from                                  IX+6    
                           A  1262    
                           A  1263    
                           A  1264    ; Stack Frame Size: 52 (bytes)
                           A  1265    ;       Spill Code: 0 (instruction)
                           A  1266    
                           A  1267    
                           A  1268    .ENDFUNC "zl_render_blit32",116,"_zl_render_bli
                           A  1269    ;  117	
                           A  1270    ;  118	void zl_render_blit8 ( UINT8 *from, UIN
                           A  1271    ;  119	                       UINT8 x1, UINT8 
                           A  1272    ;  120	                       UINT8 to_x, UINT
                           A  1273    ;  121	{
0003CE                     A  1274    _zl_render_blit8:
                           A  1275    .DEFINE "_zl_render_blit8"
                           A  1276    
                           A  1277    .VALUE _zl_render_blit8
                           A  1278    
                           A  1279    .CLASS 2
                           A  1280    
                           A  1281    .TYPE 65
                           A  1282    
                           A  1283    .ENDEF
                           A  1284    
                           A  1285    .BEGFUNC "zl_render_blit8",121,"_zl_render_blit
                           A  1286    
                           A  1287    .LINE 121
                           A  1288    
                           A  1289    .DEFINE "from"
                           A  1290    
                           A  1291    .CLASS 65
                           A  1292    
                           A  1293    .VALUE 6
                           A  1294    
                           A  1295    .TYPE 44
                           A  1296    
                           A  1297    .ENDEF
                           A  1298    
                           A  1299    .DEFINE "to"
                           A  1300    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  26


PC     Object              I  Line    Source framebuffer.src
                           A  1301    .CLASS 65
                           A  1302    
                           A  1303    .VALUE 9
                           A  1304    
                           A  1305    .TYPE 44
                           A  1306    
                           A  1307    .ENDEF
                           A  1308    
                           A  1309    .DEFINE "x1"
                           A  1310    
                           A  1311    .CLASS 65
                           A  1312    
                           A  1313    .VALUE 12
                           A  1314    
                           A  1315    .TYPE 12
                           A  1316    
                           A  1317    .ENDEF
                           A  1318    
                           A  1319    .DEFINE "y1"
                           A  1320    
                           A  1321    .CLASS 65
                           A  1322    
                           A  1323    .VALUE 15
                           A  1324    
                           A  1325    .TYPE 12
                           A  1326    
                           A  1327    .ENDEF
                           A  1328    
                           A  1329    .DEFINE "w"
                           A  1330    
                           A  1331    .CLASS 65
                           A  1332    
                           A  1333    .VALUE 18
                           A  1334    
                           A  1335    .TYPE 12
                           A  1336    
                           A  1337    .ENDEF
                           A  1338    
                           A  1339    .DEFINE "h"
                           A  1340    
                           A  1341    .CLASS 65
                           A  1342    
                           A  1343    .VALUE 21
                           A  1344    
                           A  1345    .TYPE 12
                           A  1346    
                           A  1347    .ENDEF
                           A  1348    
                           A  1349    .DEFINE "to_x"
                           A  1350    
                           A  1351    .CLASS 65
                           A  1352    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  27


PC     Object              I  Line    Source framebuffer.src
                           A  1353    .VALUE 24
                           A  1354    
                           A  1355    .TYPE 12
                           A  1356    
                           A  1357    .ENDEF
                           A  1358    
                           A  1359    .DEFINE "to_y"
                           A  1360    
                           A  1361    .CLASS 65
                           A  1362    
                           A  1363    .VALUE 27
                           A  1364    
                           A  1365    .TYPE 12
                           A  1366    
                           A  1367    .ENDEF
                           A  1368    
                           A  1369    .DEFINE "vfromline"
                           A  1370    
                           A  1371    .CLASS 65
                           A  1372    
                           A  1373    .VALUE -3
                           A  1374    
                           A  1375    .TYPE 44
                           A  1376    
                           A  1377    .ENDEF
                           A  1378    
                           A  1379    .DEFINE "vtoline"
                           A  1380    
                           A  1381    .CLASS 65
                           A  1382    
                           A  1383    .VALUE -6
                           A  1384    
                           A  1385    .TYPE 44
                           A  1386    
                           A  1387    .ENDEF
                           A  1388    
                           A  1389    .DEFINE "x"
                           A  1390    
                           A  1391    .CLASS 65
                           A  1392    
                           A  1393    .VALUE -7
                           A  1394    
                           A  1395    .TYPE 12
                           A  1396    
                           A  1397    .ENDEF
                           A  1398    
                           A  1399    .DEFINE "y"
                           A  1400    
                           A  1401    .CLASS 65
                           A  1402    
                           A  1403    .VALUE -8
                           A  1404    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  28


PC     Object              I  Line    Source framebuffer.src
                           A  1405    .TYPE 12
                           A  1406    
                           A  1407    .ENDEF
                           A  1408    
                           A  1409    .DEFINE "vfromiter"
                           A  1410    
                           A  1411    .CLASS 65
                           A  1412    
                           A  1413    .VALUE -11
                           A  1414    
                           A  1415    .TYPE 44
                           A  1416    
                           A  1417    .ENDEF
                           A  1418    
                           A  1419    .DEFINE "vtoiter"
                           A  1420    
                           A  1421    .CLASS 65
                           A  1422    
                           A  1423    .VALUE -14
                           A  1424    
                           A  1425    .TYPE 44
                           A  1426    
                           A  1427    .ENDEF
                           A  1428    
                           A  1429    .DEFINE "x2"
                           A  1430    
                           A  1431    .CLASS 65
                           A  1432    
                           A  1433    .VALUE -15
                           A  1434    
                           A  1435    .TYPE 12
                           A  1436    
                           A  1437    .ENDEF
                           A  1438    
                           A  1439    .DEFINE "y2"
                           A  1440    
                           A  1441    .CLASS 65
                           A  1442    
                           A  1443    .VALUE -16
                           A  1444    
                           A  1445    .TYPE 12
                           A  1446    
                           A  1447    .ENDEF
                           A  1448    
0003CE DDE5                A  1449    	PUSH	IX
0003D0 DD210000 00         A  1450    	LD	IX,0
0003D5 DD39                A  1451    	ADD	IX,SP
0003D7 ED22EA              A  1452    	LEA	HL,IX+-22
0003DA F9                  A  1453    	LD	SP,HL
                           A  1454    ;  122	  UINT8 x2 = x1 + w;
                           A  1455    .LINE 122
                           A  1456    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  29


PC     Object              I  Line    Source framebuffer.src
0003DB DD7E0C              A  1457    	LD	A,(IX+12)
0003DE DD8612              A  1458    	ADD	A,(IX+18)
0003E1 DD77F1              A  1459    	LD	(IX+-15),A
                           A  1460    ;  123	  UINT8 y2 = y1 + h;
                           A  1461    .LINE 123
                           A  1462    
0003E4 DD7E0F              A  1463    	LD	A,(IX+15)
0003E7 DD8615              A  1464    	ADD	A,(IX+21)
0003EA DD77F0              A  1465    	LD	(IX+-16),A
                           A  1466    ;  124	  UINT8 x, y;
                           A  1467    ;  125	  UINT8 *vfromline = from;
                           A  1468    .LINE 125
                           A  1469    
0003ED DD0706              A  1470    	LD	BC,(IX+6)
0003F0 DD0FFD              A  1471    	LD	(IX+-3),BC
                           A  1472    ;  126	  UINT8 *vfromiter;
                           A  1473    ;  127	  UINT8 *vtoline = to;
                           A  1474    .LINE 127
                           A  1475    
0003F3 DD0709              A  1476    	LD	BC,(IX+9)
0003F6 DD0FFA              A  1477    	LD	(IX+-6),BC
                           A  1478    ;  128	  UINT8 *vtoiter;
                           A  1479    ;  129	
                           A  1480    ;  130	  vfromline += ( y1 * FBWIDTH );
                           A  1481    .LINE 130
                           A  1482    
0003F9 DD7E0F              A  1483    	LD	A,(IX+15)
0003FC B7ED62              A  1484    	UEXT	HL
0003FF 6F                  A  1485    	LD	L,A
000400 3E08                A  1486    	LD	A,8
000402 CD 00 00 00         A  1487    	CALL	__ishl_b
000406 DD07FD              A  1488    	LD	BC,(IX+-3)
000409 09                  A  1489    	ADD	HL,BC
00040A DD2FFD              A  1490    	LD	(IX+-3),HL
                           A  1491    ;  131	  vfromline += x1;
                           A  1492    .LINE 131
                           A  1493    
00040D DD7E0C              A  1494    	LD	A,(IX+12)
000410 B7ED62              A  1495    	UEXT	HL
000413 6F                  A  1496    	LD	L,A
000414 DD07FD              A  1497    	LD	BC,(IX+-3)
000417 09                  A  1498    	ADD	HL,BC
000418 DD2FFD              A  1499    	LD	(IX+-3),HL
                           A  1500    ;  132	
                           A  1501    ;  133	  vtoline += ( to_y * FBWIDTH );
                           A  1502    .LINE 133
                           A  1503    
00041B DD7E1B              A  1504    	LD	A,(IX+27)
00041E B7ED62              A  1505    	UEXT	HL
000421 6F                  A  1506    	LD	L,A
000422 3E08                A  1507    	LD	A,8
000424 CD 00 00 00         A  1508    	CALL	__ishl_b
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  30


PC     Object              I  Line    Source framebuffer.src
000428 DD07FA              A  1509    	LD	BC,(IX+-6)
00042B 09                  A  1510    	ADD	HL,BC
00042C DD2FFA              A  1511    	LD	(IX+-6),HL
                           A  1512    ;  134	  vtoline += to_x;
                           A  1513    .LINE 134
                           A  1514    
00042F DD7E18              A  1515    	LD	A,(IX+24)
000432 B7ED62              A  1516    	UEXT	HL
000435 6F                  A  1517    	LD	L,A
000436 DD07FA              A  1518    	LD	BC,(IX+-6)
000439 09                  A  1519    	ADD	HL,BC
00043A DD2FFA              A  1520    	LD	(IX+-6),HL
00043D 18 0B 00            A  1521    	JR	L_58
                           A  1522    ;  135	
                           A  1523    ;  136	  for ( y = y1; y < y2; y++ ) {
000440                     A  1524    L_59:
                           A  1525    .LINE 136
                           A  1526    
000440 DD7EF8              A  1527    	LD	A,(IX+-8)
000443 DDBEF0              A  1528    	CP	A,(IX+-16)
000446 38 0B               A  1529    	JR	C,L_61
000448 18 70               A  1530    	JR	L_62
00044A                     A  1531    L_58:
00044A DD7E0F              A  1532    	LD	A,(IX+15)
00044D DD77F8              A  1533    	LD	(IX+-8),A
000450 18 EE 00            A  1534    	JR	L_59
000453                     A  1535    L_61:
                           A  1536    ;  137	    vtoiter = vtoline;
                           A  1537    .LINE 137
                           A  1538    
000453 DD07FA              A  1539    	LD	BC,(IX+-6)
000456 DD0FF2              A  1540    	LD	(IX+-14),BC
                           A  1541    ;  138	    vfromiter = vfromline;
                           A  1542    .LINE 138
                           A  1543    
000459 DD07FD              A  1544    	LD	BC,(IX+-3)
00045C DD0FF5              A  1545    	LD	(IX+-11),BC
00045F 18 0B 00            A  1546    	JR	L_53
                           A  1547    ;  139	
                           A  1548    ;  140	    for ( x = x1; x < x2; x++ ) {
000462                     A  1549    L_54:
                           A  1550    .LINE 140
                           A  1551    
000462 DD7EF9              A  1552    	LD	A,(IX+-7)
000465 DDBEF1              A  1553    	CP	A,(IX+-15)
000468 38 0B               A  1554    	JR	C,L_56
00046A 18 32               A  1555    	JR	L_57
00046C                     A  1556    L_53:
00046C DD7E0C              A  1557    	LD	A,(IX+12)
00046F DD77F9              A  1558    	LD	(IX+-7),A
000472 18 EE 00            A  1559    	JR	L_54
000475                     A  1560    L_56:
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  31


PC     Object              I  Line    Source framebuffer.src
                           A  1561    ;  141	      *vtoiter++ = *vfromiter++;
                           A  1562    .LINE 141
                           A  1563    
000475 DD07F5              A  1564    	LD	BC,(IX+-11)
000478 DD0FED              A  1565    	LD	(IX+-19),BC
00047B DD07F2              A  1566    	LD	BC,(IX+-14)
00047E DD0FEA              A  1567    	LD	(IX+-22),BC
000481 DD31ED              A  1568    	LD	IY,(IX+-19)
000484 C5E1                A  1569    	LD	HL,BC
000486 FD7E00              A  1570    	LD	A,(IY)
000489 77                  A  1571    	LD	(HL),A
00048A DD07F5              A  1572    	LD	BC,(IX+-11)
00048D 03                  A  1573    	INC	BC
00048E DD0FF5              A  1574    	LD	(IX+-11),BC
000491 DD07F2              A  1575    	LD	BC,(IX+-14)
000494 03                  A  1576    	INC	BC
000495 DD0FF2              A  1577    	LD	(IX+-14),BC
000498 DD34F9              A  1578    	INC	(IX+-7)
                           A  1579    ;  142	    }
                           A  1580    .LINE 142
                           A  1581    
00049B 18 C5 00            A  1582    	JR	L_54
00049E                     A  1583    L_57:
                           A  1584    ;  143	
                           A  1585    ;  144	    vtoline += FBWIDTH;
                           A  1586    .LINE 144
                           A  1587    
00049E 01000100            A  1588    	LD	BC,256
0004A2 DD27FA              A  1589    	LD	HL,(IX+-6)
0004A5 09                  A  1590    	ADD	HL,BC
0004A6 DD2FFA              A  1591    	LD	(IX+-6),HL
                           A  1592    ;  145	    vfromline += FBWIDTH;
                           A  1593    .LINE 145
                           A  1594    
0004A9 01000100            A  1595    	LD	BC,256
0004AD DD27FD              A  1596    	LD	HL,(IX+-3)
0004B0 09                  A  1597    	ADD	HL,BC
0004B1 DD2FFD              A  1598    	LD	(IX+-3),HL
0004B4 DD34F8              A  1599    	INC	(IX+-8)
                           A  1600    ;  146	  }
                           A  1601    .LINE 146
                           A  1602    
0004B7 18 87 00            A  1603    	JR	L_59
0004BA                     A  1604    L_62:
                           A  1605    ;  147	
                           A  1606    ;  148	  return;
                           A  1607    ;  149	}
                           A  1608    .LINE 149
                           A  1609    
0004BA DDF9                A  1610    	LD	SP,IX
0004BC DDE1                A  1611    	POP	IX
0004BE C9                  A  1612    	RET	
Zilog eZ80 Macro Assembler Version 4.2 (11121401)04-Jun-16     00:29:19     page:  32


PC     Object              I  Line    Source framebuffer.src
                           A  1613    
                           A  1614    
                           A  1615    ;**************************** _zl_render_blit8 
                           A  1616    ;Name                         Addr/Register   S
                           A  1617    ;y2                                   IX-16    
                           A  1618    ;x2                                   IX-15    
                           A  1619    ;vtoiter                              IX-14    
                           A  1620    ;vfromiter                            IX-11    
                           A  1621    ;y                                     IX-8    
                           A  1622    ;x                                     IX-7    
                           A  1623    ;vtoline                               IX-6    
                           A  1624    ;vfromline                             IX-3    
                           A  1625    ;to_y                                 IX+27    
                           A  1626    ;to_x                                 IX+24    
                           A  1627    ;h                                    IX+21    
                           A  1628    ;w                                    IX+18    
                           A  1629    ;y1                                   IX+15    
                           A  1630    ;x1                                   IX+12    
                           A  1631    ;to                                    IX+9    
                           A  1632    ;from                                  IX+6    
                           A  1633    
                           A  1634    
                           A  1635    ; Stack Frame Size: 52 (bytes)
                           A  1636    ;       Spill Code: 0 (instruction)
                           A  1637    
                           A  1638    
                           A  1639    .ENDFUNC "zl_render_blit8",149,"_zl_render_blit
                           A  1640    	XREF __sneg:ROM
                           A  1641    	XREF __stoi:ROM
                           A  1642    	XREF __stoiu:ROM
                           A  1643    	XREF __setflag:ROM
                           A  1644    	XREF __scmpzero:ROM
                           A  1645    	XREF __icmpzero:ROM
                           A  1646    	XREF __ishl_b:ROM
                           A  1647    	XREF __ishrs_b:ROM
                           A  1648    	XDEF _zl_render_blit8
                           A  1649    	XDEF _zl_render_blit32
                           A  1650    	XDEF _zl_render_line
                           A  1651    	XDEF _fb_render_rect_filled
                           A  1652    	END


Errors: 0
Warnings: 0
Lines Assembled: 1653
