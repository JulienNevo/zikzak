Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -noglobalopt -nolocalcse -optsize -nomodsect 
                           A     3    ; -padbranch -debug -peephole -const=ROM 
                           A     4    	FILE	"..\LIB_AY-3-8912.C"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    .PADBRANCH CCODE
                           A     8    	SEGMENT CODE
                           A     9    .BEGREC "NONAME0",4
                           A    10    .DEFINE "dr"
                           A    11    .VALUE 0
                           A    12    .CLASS 8
                           A    13    .TYPE 12
                           A    14    .ENDEF
                           A    15    .DEFINE "ddr"
                           A    16    .VALUE 1
                           A    17    .CLASS 8
                           A    18    .TYPE 12
                           A    19    .ENDEF
                           A    20    .DEFINE "alt1"
                           A    21    .VALUE 2
                           A    22    .CLASS 8
                           A    23    .TYPE 12
                           A    24    .ENDEF
                           A    25    .DEFINE "alt2"
                           A    26    .VALUE 3
                           A    27    .CLASS 8
                           A    28    .TYPE 12
                           A    29    .ENDEF
                           A    30    .ENDREC "NONAME0"
                           A    31    .BEGREC "NONAME1",10
                           A    32    .DEFINE "uartMode"
                           A    33    .VALUE 0
                           A    34    .CLASS 8
                           A    35    .TYPE 2
                           A    36    .ENDEF
                           A    37    .DEFINE "baudRate"
                           A    38    .VALUE 1
                           A    39    .CLASS 8
                           A    40    .TYPE 4
                           A    41    .ENDEF
                           A    42    .DEFINE "dataBits"
                           A    43    .VALUE 4
                           A    44    .CLASS 8
                           A    45    .TYPE 12
                           A    46    .ENDEF
                           A    47    .DEFINE "stopBits"
                           A    48    .VALUE 5
                           A    49    .CLASS 8
                           A    50    .TYPE 12
                           A    51    .ENDEF
                           A    52    .DEFINE "parity"
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   2


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A    53    .VALUE 6
                           A    54    .CLASS 8
                           A    55    .TYPE 12
                           A    56    .ENDEF
                           A    57    .DEFINE "fifoTriggerLevel"
                           A    58    .VALUE 7
                           A    59    .CLASS 8
                           A    60    .TYPE 12
                           A    61    .ENDEF
                           A    62    .DEFINE "hwFlowControl"
                           A    63    .VALUE 8
                           A    64    .CLASS 8
                           A    65    .TYPE 12
                           A    66    .ENDEF
                           A    67    .DEFINE "swFlowControl"
                           A    68    .VALUE 9
                           A    69    .CLASS 8
                           A    70    .TYPE 12
                           A    71    .ENDEF
                           A    72    .ENDREC "NONAME1"
                           A    73    .BEGREC "NONAME2",9
                           A    74    .DEFINE "pBuffer"
                           A    75    .VALUE 0
                           A    76    .CLASS 8
                           A    77    .TYPE 44
                           A    78    .ENDEF
                           A    79    .DEFINE "next_in"
                           A    80    .VALUE 3
                           A    81    .CLASS 8
                           A    82    .TYPE 13
                           A    83    .ENDEF
                           A    84    .DEFINE "next_out"
                           A    85    .VALUE 5
                           A    86    .CLASS 8
                           A    87    .TYPE 13
                           A    88    .ENDEF
                           A    89    .DEFINE "size"
                           A    90    .VALUE 7
                           A    91    .CLASS 8
                           A    92    .TYPE 13
                           A    93    .ENDEF
                           A    94    .ENDREC "NONAME2"
                           A    95    .BEGREC "fmt_type",19
                           A    96    .DEFINE "status"
                           A    97    .VALUE 0
                           A    98    .CLASS 8
                           A    99    .TYPE 12
                           A   100    .ENDEF
                           A   101    .DEFINE "flags"
                           A   102    .VALUE 1
                           A   103    .CLASS 8
                           A   104    .TYPE 12
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   3


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   105    .ENDEF
                           A   106    .DEFINE "size"
                           A   107    .VALUE 2
                           A   108    .CLASS 8
                           A   109    .TYPE 2
                           A   110    .ENDEF
                           A   111    .DEFINE "chr"
                           A   112    .VALUE 3
                           A   113    .CLASS 8
                           A   114    .TYPE 2
                           A   115    .ENDEF
                           A   116    .DEFINE "type"
                           A   117    .VALUE 4
                           A   118    .CLASS 8
                           A   119    .TYPE 2
                           A   120    .ENDEF
                           A   121    .DEFINE "field_width"
                           A   122    .VALUE 5
                           A   123    .CLASS 8
                           A   124    .TYPE 2
                           A   125    .ENDEF
                           A   126    .DEFINE "precision"
                           A   127    .VALUE 6
                           A   128    .CLASS 8
                           A   129    .TYPE 2
                           A   130    .ENDEF
                           A   131    .DEFINE "set_begin"
                           A   132    .VALUE 7
                           A   133    .CLASS 8
                           A   134    .TYPE 34
                           A   135    .ENDEF
                           A   136    .DEFINE "set_end"
                           A   137    .VALUE 10
                           A   138    .CLASS 8
                           A   139    .TYPE 34
                           A   140    .ENDEF
                           A   141    .DEFINE "pad_whole"
                           A   142    .VALUE 13
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "pad_pre_fract"
                           A   147    .VALUE 14
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "pad_post_fract"
                           A   152    .VALUE 15
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "pad_at"
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   4


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   157    .VALUE 16
                           A   158    .CLASS 8
                           A   159    .TYPE 34
                           A   160    .ENDEF
                           A   161    .ENDREC "fmt_type"
                           A   162    .BEGREC "flt_info",12
                           A   163    .DEFINE "flags"
                           A   164    .VALUE 0
                           A   165    .CLASS 8
                           A   166    .TYPE 12
                           A   167    .ENDEF
                           A   168    .DEFINE "exp"
                           A   169    .VALUE 1
                           A   170    .CLASS 8
                           A   171    .TYPE 2
                           A   172    .ENDEF
                           A   173    .DEFINE "digits"
                           A   174    .VALUE 2
                           A   175    .CLASS 8
                           A   176    .DIM 10
                           A   177    .TYPE 108
                           A   178    .ENDEF
                           A   179    .ENDREC "flt_info"
000000                     A   180    _delay_loop:
                           A   181    .DEFINE "_delay_loop"
                           A   182    
                           A   183    .VALUE _delay_loop
                           A   184    
                           A   185    .CLASS 3
                           A   186    
                           A   187    .TYPE 65
                           A   188    
                           A   189    .ENDEF
                           A   190    
                           A   191    .BEGFUNC "delay_loop",17,"_delay_loop"
                           A   192    
                           A   193    .LINE 17
                           A   194    
                           A   195    .DEFINE "c"
                           A   196    
                           A   197    .CLASS 65
                           A   198    
                           A   199    .VALUE 6
                           A   200    
                           A   201    .TYPE 14
                           A   202    
000000 DDE5                A   203    	PUSH	IX
000002 DD210000 00         A   204    	LD	IX,0
000007 DD39                A   205    	ADD	IX,SP
                           A   206    .ENDEF
                           A   207    
000009                     A   208    L_1:
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   5


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   209    .LINE 18
                           A   210    
000009 DD2706              A   211    	LD	HL,(IX+6)
00000C CD 00 00 00         A   212    	CALL	__icmpzero
000010 28 0D 00            A   213    	JR	Z,L_3
                           A   214    .LINE 19
                           A   215    
000013 DD3106              A   216    	LD	IY,(IX+6)
000016 ED33FF              A   217    	LEA	IY,IY+-1
000019 DD3E06              A   218    	LD	(IX+6),IY
                           A   219    .LINE 20
                           A   220    
00001C 18 EB 00            A   221    	JR	L_1
00001F                     A   222    L_3:
                           A   223    .LINE 21
                           A   224    
00001F DDF9                A   225    	LD	SP,IX
000021 DDE1                A   226    	POP	IX
000023 C9                  A   227    	RET	
                           A   228    
                           A   229    
                           A   230    ;**************************** _delay_loop *****
                           A   231    ;Name                         Addr/Register   S
                           A   232    ;c                                     IX+6    
                           A   233    
                           A   234    
                           A   235    ; Stack Frame Size: 9 (bytes)
                           A   236    ;       Spill Code: 0 (instruction)
                           A   237    
                           A   238    
                           A   239    .ENDFUNC "delay_loop",21,"_delay_loop"
                           A   240    	SEGMENT DATA
000000                     A   241    _tp:
000000 B93B                A   242    	DW	15289
000002 5F38                A   243    	DW	14431
000004 3535                A   244    	DW	13621
000006 3832                A   245    	DW	12856
000008 672F                A   246    	DW	12135
00000A BE2C                A   247    	DW	11454
00000C 3B2A                A   248    	DW	10811
00000E DC27                A   249    	DW	10204
000010 9F25                A   250    	DW	9631
000012 8323                A   251    	DW	9091
000014 8521                A   252    	DW	8581
000016 A31F                A   253    	DW	8099
000018 DD1D                A   254    	DW	7645
00001A 2F1C                A   255    	DW	7215
00001C 9A1A                A   256    	DW	6810
00001E 1C19                A   257    	DW	6428
000020 B317                A   258    	DW	6067
000022 5F16                A   259    	DW	5727
000024 1D15                A   260    	DW	5405
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   6


PC     Object              I  Line    Source lib_ay-3-8912.src
000026 EE13                A   261    	DW	5102
000028 D012                A   262    	DW	4816
00002A C111                A   263    	DW	4545
00002C C210                A   264    	DW	4290
00002E D20F                A   265    	DW	4050
000030 EE0E                A   266    	DW	3822
000032 180E                A   267    	DW	3608
000034 4D0D                A   268    	DW	3405
000036 8E0C                A   269    	DW	3214
000038 DA0B                A   270    	DW	3034
00003A 2F0B                A   271    	DW	2863
00003C 8F0A                A   272    	DW	2703
00003E F709                A   273    	DW	2551
000040 6809                A   274    	DW	2408
000042 E108                A   275    	DW	2273
000044 6108                A   276    	DW	2145
000046 E907                A   277    	DW	2025
000048 7707                A   278    	DW	1911
00004A 0C07                A   279    	DW	1804
00004C A706                A   280    	DW	1703
00004E 4706                A   281    	DW	1607
000050 ED05                A   282    	DW	1517
000052 9805                A   283    	DW	1432
000054 4705                A   284    	DW	1351
000056 FC04                A   285    	DW	1276
000058 B404                A   286    	DW	1204
00005A 7004                A   287    	DW	1136
00005C 3104                A   288    	DW	1073
00005E F403                A   289    	DW	1012
000060 BC03                A   290    	DW	956
000062 8603                A   291    	DW	902
000064 5303                A   292    	DW	851
000066 2403                A   293    	DW	804
000068 F602                A   294    	DW	758
00006A CC02                A   295    	DW	716
00006C A402                A   296    	DW	676
00006E 7E02                A   297    	DW	638
000070 5A02                A   298    	DW	602
000072 3802                A   299    	DW	568
000074 1802                A   300    	DW	536
000076 FA01                A   301    	DW	506
000078 DE01                A   302    	DW	478
00007A C301                A   303    	DW	451
00007C AA01                A   304    	DW	426
00007E 9201                A   305    	DW	402
000080 7B01                A   306    	DW	379
000082 6601                A   307    	DW	358
000084 5201                A   308    	DW	338
000086 3F01                A   309    	DW	319
000088 2D01                A   310    	DW	301
00008A 1C01                A   311    	DW	284
00008C 0C01                A   312    	DW	268
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   7


PC     Object              I  Line    Source lib_ay-3-8912.src
00008E FD00                A   313    	DW	253
000090 EF00                A   314    	DW	239
000092 E100                A   315    	DW	225
000094 D500                A   316    	DW	213
000096 C900                A   317    	DW	201
000098 BE00                A   318    	DW	190
00009A B300                A   319    	DW	179
00009C A900                A   320    	DW	169
00009E 9F00                A   321    	DW	159
0000A0 9600                A   322    	DW	150
0000A2 8E00                A   323    	DW	142
0000A4 8600                A   324    	DW	134
0000A6 7F00                A   325    	DW	127
0000A8 7700                A   326    	DW	119
0000AA 7100                A   327    	DW	113
0000AC 6A00                A   328    	DW	106
0000AE 6400                A   329    	DW	100
0000B0 5F00                A   330    	DW	95
0000B2 5900                A   331    	DW	89
0000B4 5400                A   332    	DW	84
0000B6 5000                A   333    	DW	80
0000B8 4B00                A   334    	DW	75
0000BA 4700                A   335    	DW	71
0000BC 4300                A   336    	DW	67
0000BE 3F00                A   337    	DW	63
0000C0 3C00                A   338    	DW	60
0000C2 3800                A   339    	DW	56
0000C4 3500                A   340    	DW	53
0000C6 3200                A   341    	DW	50
0000C8 2F00                A   342    	DW	47
0000CA 2D00                A   343    	DW	45
0000CC 2A00                A   344    	DW	42
0000CE 2800                A   345    	DW	40
0000D0 2600                A   346    	DW	38
0000D2 2400                A   347    	DW	36
0000D4 2200                A   348    	DW	34
0000D6 2000                A   349    	DW	32
0000D8 1E00                A   350    	DW	30
0000DA 1C00                A   351    	DW	28
0000DC 1B00                A   352    	DW	27
0000DE 1900                A   353    	DW	25
0000E0 1800                A   354    	DW	24
0000E2 1600                A   355    	DW	22
0000E4 1500                A   356    	DW	21
0000E6 1400                A   357    	DW	20
0000E8 1300                A   358    	DW	19
0000EA 1200                A   359    	DW	18
0000EC 1100                A   360    	DW	17
0000EE 1000                A   361    	DW	16
0000F0 0F00                A   362    	DW	15
0000F2 0E00                A   363    	DW	14
0000F4 0D00                A   364    	DW	13
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   8


PC     Object              I  Line    Source lib_ay-3-8912.src
0000F6 0D00                A   365    	DW	13
0000F8 0C00                A   366    	DW	12
0000FA 0B00                A   367    	DW	11
0000FC 0B00                A   368    	DW	11
0000FE 0A00                A   369    	DW	10
000100 0000                A   370    	DW	0
                           A   371    .DEFINE "tp"
                           A   372    .ALIAS "_tp"
                           A   373    .CLASS 69
                           A   374    .VALUE _tp
                           A   375    .DIM 129
                           A   376    .TYPE 109
                           A   377    .ENDEF
000102                     A   378    _song:
000102 3C00                A   379    	DW	60
000104 F401                A   380    	DW	500
000106 3E00                A   381    	DW	62
000108 F401                A   382    	DW	500
00010A 4000                A   383    	DW	64
00010C F401                A   384    	DW	500
00010E 4100                A   385    	DW	65
000110 F401                A   386    	DW	500
000112 4000                A   387    	DW	64
000114 F401                A   388    	DW	500
000116 3E00                A   389    	DW	62
000118 F401                A   390    	DW	500
00011A 3C00                A   391    	DW	60
00011C F401                A   392    	DW	500
00011E 8000                A   393    	DW	128
000120 F401                A   394    	DW	500
000122 4000                A   395    	DW	64
000124 F401                A   396    	DW	500
000126 4100                A   397    	DW	65
000128 F401                A   398    	DW	500
00012A 4300                A   399    	DW	67
00012C F401                A   400    	DW	500
00012E 4500                A   401    	DW	69
000130 F401                A   402    	DW	500
000132 4300                A   403    	DW	67
000134 F401                A   404    	DW	500
000136 4100                A   405    	DW	65
000138 F401                A   406    	DW	500
00013A 4000                A   407    	DW	64
00013C F401                A   408    	DW	500
00013E 8000                A   409    	DW	128
000140 F401                A   410    	DW	500
000142 3C00                A   411    	DW	60
000144 F401                A   412    	DW	500
000146 8000                A   413    	DW	128
000148 F401                A   414    	DW	500
00014A 3C00                A   415    	DW	60
00014C F401                A   416    	DW	500
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:   9


PC     Object              I  Line    Source lib_ay-3-8912.src
00014E 8000                A   417    	DW	128
000150 F401                A   418    	DW	500
000152 3C00                A   419    	DW	60
000154 F401                A   420    	DW	500
000156 8000                A   421    	DW	128
000158 F401                A   422    	DW	500
00015A 3C00                A   423    	DW	60
00015C F401                A   424    	DW	500
00015E 8000                A   425    	DW	128
000160 F401                A   426    	DW	500
000162 3C00                A   427    	DW	60
000164 8000                A   428    	DW	128
000166 8000                A   429    	DW	128
000168 8000                A   430    	DW	128
00016A 3C00                A   431    	DW	60
00016C 8000                A   432    	DW	128
00016E 8000                A   433    	DW	128
000170 8000                A   434    	DW	128
000172 3E00                A   435    	DW	62
000174 8000                A   436    	DW	128
000176 8000                A   437    	DW	128
000178 8000                A   438    	DW	128
00017A 3E00                A   439    	DW	62
00017C 8000                A   440    	DW	128
00017E 8000                A   441    	DW	128
000180 8000                A   442    	DW	128
000182 4000                A   443    	DW	64
000184 8000                A   444    	DW	128
000186 8000                A   445    	DW	128
000188 8000                A   446    	DW	128
00018A 4000                A   447    	DW	64
00018C 8000                A   448    	DW	128
00018E 8000                A   449    	DW	128
000190 8000                A   450    	DW	128
000192 4100                A   451    	DW	65
000194 8000                A   452    	DW	128
000196 8000                A   453    	DW	128
000198 8000                A   454    	DW	128
00019A 4100                A   455    	DW	65
00019C 8000                A   456    	DW	128
00019E 8000                A   457    	DW	128
0001A0 8000                A   458    	DW	128
0001A2 4000                A   459    	DW	64
0001A4 FA00                A   460    	DW	250
0001A6 8000                A   461    	DW	128
0001A8 FA00                A   462    	DW	250
0001AA 3E00                A   463    	DW	62
0001AC FA00                A   464    	DW	250
0001AE 8000                A   465    	DW	128
0001B0 FA00                A   466    	DW	250
0001B2 3C00                A   467    	DW	60
0001B4 FA00                A   468    	DW	250
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  10


PC     Object              I  Line    Source lib_ay-3-8912.src
0001B6 8000                A   469    	DW	128
0001B8 E803                A   470    	DW	1000
                           A   471    .DEFINE "song"
                           A   472    .ALIAS "_song"
                           A   473    .CLASS 69
                           A   474    .VALUE _song
                           A   475    .DIM 46
                           A   476    .DIM 2
                           A   477    .TYPE 877
                           A   478    .ENDEF
                           A   479    ;    1	
                           A   480    ;    2	// install path: /usr/lib/avr/include/a
                           A   481    ;    3	
                           A   482    ;    4	#include <eZ80.h>
                           A   483    ;    5	#include <stdio.h>
                           A   484    ;    6	#include <gpio.h>
                           A   485    ;    7	
                           A   486    ;    8	#include "skeelib.h"
                           A   487    ;    9	#include "lib_ay-3-8912.h"
                           A   488    ;   10	
                           A   489    ;   11	
                           A   490    ;   12	// frequencies related to MIDI note num
                           A   491    ;   13	UINT16 tp[] = {
                           A   492    ;   14	  15289, 14431, 13621, 12856, 12135, 11
                           A   493    ;   15	  9631, 9091, 8581, 8099, 7645, 7215, 6
                           A   494    ;   16	  6067, 5727, 5405, 5102, 4816, 4545, 4
                           A   495    ;   17	  3822, 3608, 3405, 3214, 3034, 2863, 2
                           A   496    ;   18	  2408, 2273, 2145, 2025, 1911, 1804, 1
                           A   497    ;   19	  1517, 1432, 1351, 1276, 1204, 1136, 1
                           A   498    ;   20	  956, 902, 851, 804, 758, 716, 676, 63
                           A   499    ;   21	  602, 568, 536, 506, 478, 451, 426, 40
                           A   500    ;   22	  379, 358, 338, 319, 301, 284, 268, 25
                           A   501    ;   23	  239, 225, 213, 201, 190, 179, 169, 15
                           A   502    ;   24	  150, 142, 134, 127, 119, 113, 106, 10
                           A   503    ;   25	  95, 89, 84, 80, 75, 71, 67, 63,//88-9
                           A   504    ;   26	  60, 56, 53, 50, 47, 45, 42, 40,//96-1
                           A   505    ;   27	  38, 36, 34, 32, 30, 28, 27, 25,//104-
                           A   506    ;   28	  24, 22, 21, 20, 19, 18, 17, 16,//112-
                           A   507    ;   29	  15, 14, 13, 13, 12, 11, 11, 10,//120-
                           A   508    ;   30	  0//off
                           A   509    ;   31	};
                           A   510    ;   32	
                           A   511    ;   33	UINT16 song[][2] ={
                           A   512    	SEGMENT CODE
                           A   513    ;   34	  {60,500},
                           A   514    ;   35	  {62,500},
                           A   515    ;   36	  {64,500},
                           A   516    ;   37	  {65,500},
                           A   517    ;   38	  {64,500},
                           A   518    ;   39	  {62,500},
                           A   519    ;   40	  {60,500},
                           A   520    ;   41	  {128,500},
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  11


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   521    ;   42	  {64,500},
                           A   522    ;   43	  {65,500},
                           A   523    ;   44	  {67,500},
                           A   524    ;   45	  {69,500},
                           A   525    ;   46	  {67,500},
                           A   526    ;   47	  {65,500},
                           A   527    ;   48	  {64,500},
                           A   528    ;   49	  {128,500},  
                           A   529    ;   50	  {60,500},
                           A   530    ;   51	  {128,500},
                           A   531    ;   52	  {60,500},
                           A   532    ;   53	  {128,500},
                           A   533    ;   54	  {60,500},
                           A   534    ;   55	  {128,500},
                           A   535    ;   56	  {60,500},
                           A   536    ;   57	  {128,500},  
                           A   537    ;   58	  {60,128},
                           A   538    ;   59	  {128,128},
                           A   539    ;   60	  {60,128},
                           A   540    ;   61	  {128,128},
                           A   541    ;   62	  {62,128},
                           A   542    ;   63	  {128,128},
                           A   543    ;   64	  {62,128},
                           A   544    ;   65	  {128,128},
                           A   545    ;   66	  {64,128},
                           A   546    ;   67	  {128,128},
                           A   547    ;   68	  {64,128},
                           A   548    ;   69	  {128,128},
                           A   549    ;   70	  {65,128},
                           A   550    ;   71	  {128,128},
                           A   551    ;   72	  {65,128},
                           A   552    ;   73	  {128,128},
                           A   553    ;   74	  {64,250},
                           A   554    ;   75	  {128,250},
                           A   555    ;   76	  {62,250},
                           A   556    ;   77	  {128,250},
                           A   557    ;   78	  {60,250},
                           A   558    ;   79	  {128,1000}  
                           A   559    ;   80	};
                           A   560    ;   81	
                           A   561    ;   82	
                           A   562    ;   83	void ym_play_demo ( void ) {
000024                     A   563    _ym_play_demo:
                           A   564    .DEFINE "_ym_play_demo"
                           A   565    
                           A   566    .VALUE _ym_play_demo
                           A   567    
                           A   568    .CLASS 2
                           A   569    
                           A   570    .TYPE 65
                           A   571    
                           A   572    .ENDEF
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  12


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   573    
                           A   574    .BEGFUNC "ym_play_demo",83,"_ym_play_demo"
                           A   575    
                           A   576    .LINE 83
                           A   577    
                           A   578    .DEFINE "p"
                           A   579    
                           A   580    .CLASS 65
                           A   581    
                           A   582    .VALUE -3
                           A   583    
                           A   584    .TYPE 44
                           A   585    
                           A   586    .ENDEF
                           A   587    
                           A   588    .DEFINE "i"
                           A   589    
                           A   590    .CLASS 65
                           A   591    
                           A   592    .VALUE -6
                           A   593    
                           A   594    .TYPE 4
                           A   595    
                           A   596    .ENDEF
                           A   597    
000024 DDE5                A   598    	PUSH	IX
000026 DD210000 00         A   599    	LD	IX,0
00002B DD39                A   600    	ADD	IX,SP
00002D ED22CA              A   601    	LEA	HL,IX+-54
000030 F9                  A   602    	LD	SP,HL
                           A   603    ;   84	
                           A   604    ;   85	  // set up AY mixer
                           A   605    ;   86	  ay_write ( 0x06, 0x00 );
                           A   606    .LINE 86
                           A   607    
000031 01000000            A   608    	LD	BC,0
000035 C5                  A   609    	PUSH	BC
000036 01060000            A   610    	LD	BC,6
00003A C5                  A   611    	PUSH	BC
00003B CD 0F 04 00         A   612    	CALL	_ay_write
00003F C1                  A   613    	POP	BC
000040 C1                  A   614    	POP	BC
                           A   615    ;   87	  ay_write ( 0x07, 0x3e );
                           A   616    .LINE 87
                           A   617    
000041 013E0000            A   618    	LD	BC,62
000045 C5                  A   619    	PUSH	BC
000046 01070000            A   620    	LD	BC,7
00004A C5                  A   621    	PUSH	BC
00004B CD 0F 04 00         A   622    	CALL	_ay_write
00004F C1                  A   623    	POP	BC
000050 C1                  A   624    	POP	BC
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  13


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   625    ;   88	  ay_write ( 0x08, 0x0f );
                           A   626    .LINE 88
                           A   627    
000051 010F0000            A   628    	LD	BC,15
000055 C5                  A   629    	PUSH	BC
000056 01080000            A   630    	LD	BC,8
00005A C5                  A   631    	PUSH	BC
00005B CD 0F 04 00         A   632    	CALL	_ay_write
00005F C1                  A   633    	POP	BC
000060 C1                  A   634    	POP	BC
                           A   635    ;   89	
                           A   636    ;   90	  while ( 1 ) {
                           A   637    .LINE 90
                           A   638    
                           A   639    ;   91	
                           A   640    ;   92	
                           A   641    ;   93	#if 0 // copy compiled in song to cart 
                           A   642    ;   94	    int i, j, k;
                           A   643    ;   95	    unsigned char *p;
                           A   644    ;   96		extern unsigned int framelimit; 	
                           A   645    ;   97		extern const unsigned char song_hac
                           A   646    ;   98	
                           A   647    ;   99		{
                           A   648    ;  100			char b [ 4 ] = ".\n\0";
                           A   649    ;  101			unsigned char *c = (unsigned ch
                           A   650    ;  102			p = song_hacked_ym;
                           A   651    ;  103	
                           A   652    ;  104			for ( i=0; i < framelimit; i++ 
                           A   653    ;  105				*c++ = *p++;
                           A   654    ;  106				delay_ms_spin ( 10 );
                           A   655    ;  107				write_UART0 ( b, 2 );
                           A   656    ;  108			}
                           A   657    ;  109			
                           A   658    ;  110		}
                           A   659    ;  111		  
                           A   660    ;  112		while ( 1 ) {
                           A   661    ;  113	
                           A   662    ;  114			p = song_hacked_ym;
                           A   663    ;  115	
                           A   664    ;  116			// assuming not interleaved or 
                           A   665    ;  117			for ( i=0; i < framelimit; i++ 
                           A   666    ;  118	
                           A   667    ;  119			  ay_write (  0, *p++ ); // A
                           A   668    ;  120			  ay_write (  1, *p++ ); // A
                           A   669    ;  121			  ay_write (  2, *p++ ); // B
                           A   670    ;  122			  ay_write (  3, *p++ ); // B
                           A   671    ;  123			  ay_write (  4, *p++ ); // C
                           A   672    ;  124			  ay_write (  5, *p++ ); // C
                           A   673    ;  125			  ay_write (  6, *p++ ); // Noi
                           A   674    ;  126			  ay_write (  7, *p++ ); // Mix
                           A   675    ;  127			  ay_write ( 10, *p++ ); // Vol
                           A   676    ;  128			  ay_write ( 11, *p++ ); // Vol
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  14


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   677    ;  129			  ay_write ( 12, *p++ ); // Vol
                           A   678    ;  130			  ay_write ( 13, *p++ ); // Env
                           A   679    ;  131			  ay_write ( 14, *p++ ); // Env
                           A   680    ;  132			  ay_write ( 15, *p++ ); // Env
                           A   681    ;  133			  p++; // extended
                           A   682    ;  134			  p++; // extended
                           A   683    ;  135				
                           A   684    ;  136			  delay_ms_spin ( 2 );
                           A   685    ;  137	
                           A   686    ;  138			} // for iterate over song
                           A   687    ;  139	
                           A   688    ;  140		} // while forever
                           A   689    ;  141	#endif
                           A   690    ;  142	
                           A   691    ;  143	#if 1 // from C file array compiled in 
                           A   692    ;  144	    int i, j, k;
                           A   693    ;  145	    unsigned char *p;
                           A   694    ;  146		extern unsigned int framelimit; 	
                           A   695    ;  147		extern const unsigned char song_hac
                           A   696    ;  148	
                           A   697    ;  149		while ( 1 ) {
000061                     A   698    L_53:
                           A   699    .LINE 149
                           A   700    
                           A   701    ;  150	
                           A   702    ;  151			p = song_hacked_ym;
                           A   703    .LINE 151
                           A   704    
000061 01 00 00 00         A   705    	LD	BC,_song_hacked_ym
000065 DD0FFD              A   706    	LD	(IX+-3),BC
000068 18 10 00            A   707    	JR	L_49
                           A   708    ;  152	
                           A   709    ;  153			// assuming not interleaved or 
                           A   710    ;  154			for ( i=0; i < framelimit; i++ 
00006B                     A   711    L_50:
                           A   712    .LINE 154
                           A   713    
00006B ED4B 00 00 00       A   714    	LD	BC,(_framelimit)
000070 DD27FA              A   715    	LD	HL,(IX+-6)
000073 B7                  A   716    	OR	A,A
000074 ED42                A   717    	SBC	HL,BC
000076 38 0C               A   718    	JR	C,L_52
000078 18 E7               A   719    	JR	L_53
00007A                     A   720    L_49:
00007A 01000000            A   721    	LD	BC,0
00007E DD0FFA              A   722    	LD	(IX+-6),BC
000081 18 E8 00            A   723    	JR	L_50
000084                     A   724    L_52:
                           A   725    ;  155	
                           A   726    ;  156			  if ( *(p - 16) != *p )
                           A   727    .LINE 156
                           A   728    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  15


PC     Object              I  Line    Source lib_ay-3-8912.src
000084 DD31FD              A   729    	LD	IY,(IX+-3)
000087 FD7EF0              A   730    	LD	A,(IY+-16)
00008A FDBE00              A   731    	CP	A,(IY)
00008D 28 13 00            A   732    	JR	Z,L_7
                           A   733    ;  157				ay_write (  0, *p ); // A
                           A   734    .LINE 157
                           A   735    
000090 DD27FD              A   736    	LD	HL,(IX+-3)
000093 4E                  A   737    	LD	C,(HL)
000094 0600                A   738    	LD	B,0
000096 C5                  A   739    	PUSH	BC
000097 01000000            A   740    	LD	BC,0
00009B C5                  A   741    	PUSH	BC
00009C CD 0F 04 00         A   742    	CALL	_ay_write
0000A0 C1                  A   743    	POP	BC
0000A1 C1                  A   744    	POP	BC
0000A2                     A   745    L_7:
                           A   746    ;  158			  p++;
                           A   747    .LINE 158
                           A   748    
0000A2 DD07FD              A   749    	LD	BC,(IX+-3)
0000A5 DD0FF7              A   750    	LD	(IX+-9),BC
0000A8 DD07FD              A   751    	LD	BC,(IX+-3)
0000AB 03                  A   752    	INC	BC
0000AC DD0FFD              A   753    	LD	(IX+-3),BC
                           A   754    ;  159			  if ( *(p - 16) != *p )
                           A   755    .LINE 159
                           A   756    
0000AF DD31FD              A   757    	LD	IY,(IX+-3)
0000B2 FD7EF0              A   758    	LD	A,(IY+-16)
0000B5 FDBE00              A   759    	CP	A,(IY)
0000B8 28 16 00            A   760    	JR	Z,L_10
                           A   761    ;  160				  ay_write (  1, (*p) & 0x0
                           A   762    .LINE 160
                           A   763    
0000BB DD27FD              A   764    	LD	HL,(IX+-3)
0000BE 7E                  A   765    	LD	A,(HL)
0000BF E60F                A   766    	AND	A,15
0000C1 4F                  A   767    	LD	C,A
0000C2 0600                A   768    	LD	B,0
0000C4 C5                  A   769    	PUSH	BC
0000C5 01010000            A   770    	LD	BC,1
0000C9 C5                  A   771    	PUSH	BC
0000CA CD 0F 04 00         A   772    	CALL	_ay_write
0000CE C1                  A   773    	POP	BC
0000CF C1                  A   774    	POP	BC
0000D0                     A   775    L_10:
                           A   776    ;  161			  p++;
                           A   777    .LINE 161
                           A   778    
0000D0 DD07FD              A   779    	LD	BC,(IX+-3)
0000D3 DD0FF4              A   780    	LD	(IX+-12),BC
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  16


PC     Object              I  Line    Source lib_ay-3-8912.src
0000D6 DD07FD              A   781    	LD	BC,(IX+-3)
0000D9 03                  A   782    	INC	BC
0000DA DD0FFD              A   783    	LD	(IX+-3),BC
                           A   784    ;  162			  if ( *(p - 16) != *p )
                           A   785    .LINE 162
                           A   786    
0000DD DD31FD              A   787    	LD	IY,(IX+-3)
0000E0 FD7EF0              A   788    	LD	A,(IY+-16)
0000E3 FDBE00              A   789    	CP	A,(IY)
0000E6 28 13 00            A   790    	JR	Z,L_13
                           A   791    ;  163				  ay_write (  2, *p ); // B
                           A   792    .LINE 163
                           A   793    
0000E9 DD27FD              A   794    	LD	HL,(IX+-3)
0000EC 4E                  A   795    	LD	C,(HL)
0000ED 0600                A   796    	LD	B,0
0000EF C5                  A   797    	PUSH	BC
0000F0 01020000            A   798    	LD	BC,2
0000F4 C5                  A   799    	PUSH	BC
0000F5 CD 0F 04 00         A   800    	CALL	_ay_write
0000F9 C1                  A   801    	POP	BC
0000FA C1                  A   802    	POP	BC
0000FB                     A   803    L_13:
                           A   804    ;  164			  p++;
                           A   805    .LINE 164
                           A   806    
0000FB DD07FD              A   807    	LD	BC,(IX+-3)
0000FE DD0FF1              A   808    	LD	(IX+-15),BC
000101 DD07FD              A   809    	LD	BC,(IX+-3)
000104 03                  A   810    	INC	BC
000105 DD0FFD              A   811    	LD	(IX+-3),BC
                           A   812    ;  165			  if ( *(p - 16) != *p )
                           A   813    .LINE 165
                           A   814    
000108 DD31FD              A   815    	LD	IY,(IX+-3)
00010B FD7EF0              A   816    	LD	A,(IY+-16)
00010E FDBE00              A   817    	CP	A,(IY)
000111 28 16 00            A   818    	JR	Z,L_16
                           A   819    ;  166				  ay_write (  3, (*p) & 0x0
                           A   820    .LINE 166
                           A   821    
000114 DD27FD              A   822    	LD	HL,(IX+-3)
000117 7E                  A   823    	LD	A,(HL)
000118 E60F                A   824    	AND	A,15
00011A 4F                  A   825    	LD	C,A
00011B 0600                A   826    	LD	B,0
00011D C5                  A   827    	PUSH	BC
00011E 01030000            A   828    	LD	BC,3
000122 C5                  A   829    	PUSH	BC
000123 CD 0F 04 00         A   830    	CALL	_ay_write
000127 C1                  A   831    	POP	BC
000128 C1                  A   832    	POP	BC
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  17


PC     Object              I  Line    Source lib_ay-3-8912.src
000129                     A   833    L_16:
                           A   834    ;  167			  p++;
                           A   835    .LINE 167
                           A   836    
000129 DD07FD              A   837    	LD	BC,(IX+-3)
00012C DD0FEE              A   838    	LD	(IX+-18),BC
00012F DD07FD              A   839    	LD	BC,(IX+-3)
000132 03                  A   840    	INC	BC
000133 DD0FFD              A   841    	LD	(IX+-3),BC
                           A   842    ;  168			  if ( *(p - 16) != *p )
                           A   843    .LINE 168
                           A   844    
000136 DD31FD              A   845    	LD	IY,(IX+-3)
000139 FD7EF0              A   846    	LD	A,(IY+-16)
00013C FDBE00              A   847    	CP	A,(IY)
00013F 28 13 00            A   848    	JR	Z,L_19
                           A   849    ;  169				  ay_write (  4, *p ); // C
                           A   850    .LINE 169
                           A   851    
000142 DD27FD              A   852    	LD	HL,(IX+-3)
000145 4E                  A   853    	LD	C,(HL)
000146 0600                A   854    	LD	B,0
000148 C5                  A   855    	PUSH	BC
000149 01040000            A   856    	LD	BC,4
00014D C5                  A   857    	PUSH	BC
00014E CD 0F 04 00         A   858    	CALL	_ay_write
000152 C1                  A   859    	POP	BC
000153 C1                  A   860    	POP	BC
000154                     A   861    L_19:
                           A   862    ;  170			  p++;
                           A   863    .LINE 170
                           A   864    
000154 DD07FD              A   865    	LD	BC,(IX+-3)
000157 DD0FEB              A   866    	LD	(IX+-21),BC
00015A DD07FD              A   867    	LD	BC,(IX+-3)
00015D 03                  A   868    	INC	BC
00015E DD0FFD              A   869    	LD	(IX+-3),BC
                           A   870    ;  171			  if ( *(p - 16) != *p )
                           A   871    .LINE 171
                           A   872    
000161 DD31FD              A   873    	LD	IY,(IX+-3)
000164 FD7EF0              A   874    	LD	A,(IY+-16)
000167 FDBE00              A   875    	CP	A,(IY)
00016A 28 16 00            A   876    	JR	Z,L_22
                           A   877    ;  172				  ay_write (  5, (*p) & 0x0
                           A   878    .LINE 172
                           A   879    
00016D DD27FD              A   880    	LD	HL,(IX+-3)
000170 7E                  A   881    	LD	A,(HL)
000171 E60F                A   882    	AND	A,15
000173 4F                  A   883    	LD	C,A
000174 0600                A   884    	LD	B,0
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  18


PC     Object              I  Line    Source lib_ay-3-8912.src
000176 C5                  A   885    	PUSH	BC
000177 01050000            A   886    	LD	BC,5
00017B C5                  A   887    	PUSH	BC
00017C CD 0F 04 00         A   888    	CALL	_ay_write
000180 C1                  A   889    	POP	BC
000181 C1                  A   890    	POP	BC
000182                     A   891    L_22:
                           A   892    ;  173			  p++;
                           A   893    .LINE 173
                           A   894    
000182 DD07FD              A   895    	LD	BC,(IX+-3)
000185 DD0FE8              A   896    	LD	(IX+-24),BC
000188 DD07FD              A   897    	LD	BC,(IX+-3)
00018B 03                  A   898    	INC	BC
00018C DD0FFD              A   899    	LD	(IX+-3),BC
                           A   900    ;  174			  if ( *(p - 16) != *p )
                           A   901    .LINE 174
                           A   902    
00018F DD31FD              A   903    	LD	IY,(IX+-3)
000192 FD7EF0              A   904    	LD	A,(IY+-16)
000195 FDBE00              A   905    	CP	A,(IY)
000198 28 16 00            A   906    	JR	Z,L_25
                           A   907    ;  175				  ay_write (  6, (*p) & 0x1
                           A   908    .LINE 175
                           A   909    
00019B DD27FD              A   910    	LD	HL,(IX+-3)
00019E 7E                  A   911    	LD	A,(HL)
00019F E61F                A   912    	AND	A,31
0001A1 4F                  A   913    	LD	C,A
0001A2 0600                A   914    	LD	B,0
0001A4 C5                  A   915    	PUSH	BC
0001A5 01060000            A   916    	LD	BC,6
0001A9 C5                  A   917    	PUSH	BC
0001AA CD 0F 04 00         A   918    	CALL	_ay_write
0001AE C1                  A   919    	POP	BC
0001AF C1                  A   920    	POP	BC
0001B0                     A   921    L_25:
                           A   922    ;  176			  p++;
                           A   923    .LINE 176
                           A   924    
0001B0 DD07FD              A   925    	LD	BC,(IX+-3)
0001B3 DD0FE5              A   926    	LD	(IX+-27),BC
0001B6 DD07FD              A   927    	LD	BC,(IX+-3)
0001B9 03                  A   928    	INC	BC
0001BA DD0FFD              A   929    	LD	(IX+-3),BC
                           A   930    ;  177			  if ( *(p - 16) != *p )
                           A   931    .LINE 177
                           A   932    
0001BD DD31FD              A   933    	LD	IY,(IX+-3)
0001C0 FD7EF0              A   934    	LD	A,(IY+-16)
0001C3 FDBE00              A   935    	CP	A,(IY)
0001C6 28 16 00            A   936    	JR	Z,L_28
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  19


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A   937    ;  178				  ay_write (  7, (*p) & 0x3
                           A   938    .LINE 178
                           A   939    
0001C9 DD27FD              A   940    	LD	HL,(IX+-3)
0001CC 7E                  A   941    	LD	A,(HL)
0001CD E63F                A   942    	AND	A,63
0001CF 4F                  A   943    	LD	C,A
0001D0 0600                A   944    	LD	B,0
0001D2 C5                  A   945    	PUSH	BC
0001D3 01070000            A   946    	LD	BC,7
0001D7 C5                  A   947    	PUSH	BC
0001D8 CD 0F 04 00         A   948    	CALL	_ay_write
0001DC C1                  A   949    	POP	BC
0001DD C1                  A   950    	POP	BC
0001DE                     A   951    L_28:
                           A   952    ;  179			  p++;
                           A   953    .LINE 179
                           A   954    
0001DE DD07FD              A   955    	LD	BC,(IX+-3)
0001E1 DD0FE2              A   956    	LD	(IX+-30),BC
0001E4 DD07FD              A   957    	LD	BC,(IX+-3)
0001E7 03                  A   958    	INC	BC
0001E8 DD0FFD              A   959    	LD	(IX+-3),BC
                           A   960    ;  180			  if ( *(p - 16) != *p )
                           A   961    .LINE 180
                           A   962    
0001EB DD31FD              A   963    	LD	IY,(IX+-3)
0001EE FD7EF0              A   964    	LD	A,(IY+-16)
0001F1 FDBE00              A   965    	CP	A,(IY)
0001F4 28 16 00            A   966    	JR	Z,L_31
                           A   967    ;  181				  ay_write ( 10, (*p) & 0x1
                           A   968    .LINE 181
                           A   969    
0001F7 DD27FD              A   970    	LD	HL,(IX+-3)
0001FA 7E                  A   971    	LD	A,(HL)
0001FB E61F                A   972    	AND	A,31
0001FD 4F                  A   973    	LD	C,A
0001FE 0600                A   974    	LD	B,0
000200 C5                  A   975    	PUSH	BC
000201 010A0000            A   976    	LD	BC,10
000205 C5                  A   977    	PUSH	BC
000206 CD 0F 04 00         A   978    	CALL	_ay_write
00020A C1                  A   979    	POP	BC
00020B C1                  A   980    	POP	BC
00020C                     A   981    L_31:
                           A   982    ;  182			  p++;
                           A   983    .LINE 182
                           A   984    
00020C DD07FD              A   985    	LD	BC,(IX+-3)
00020F DD0FDF              A   986    	LD	(IX+-33),BC
000212 DD07FD              A   987    	LD	BC,(IX+-3)
000215 03                  A   988    	INC	BC
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  20


PC     Object              I  Line    Source lib_ay-3-8912.src
000216 DD0FFD              A   989    	LD	(IX+-3),BC
                           A   990    ;  183			  if ( *(p - 16) != *p )
                           A   991    .LINE 183
                           A   992    
000219 DD31FD              A   993    	LD	IY,(IX+-3)
00021C FD7EF0              A   994    	LD	A,(IY+-16)
00021F FDBE00              A   995    	CP	A,(IY)
000222 28 16 00            A   996    	JR	Z,L_34
                           A   997    ;  184				  ay_write ( 11, (*p) & 0x1
                           A   998    .LINE 184
                           A   999    
000225 DD27FD              A  1000    	LD	HL,(IX+-3)
000228 7E                  A  1001    	LD	A,(HL)
000229 E61F                A  1002    	AND	A,31
00022B 4F                  A  1003    	LD	C,A
00022C 0600                A  1004    	LD	B,0
00022E C5                  A  1005    	PUSH	BC
00022F 010B0000            A  1006    	LD	BC,11
000233 C5                  A  1007    	PUSH	BC
000234 CD 0F 04 00         A  1008    	CALL	_ay_write
000238 C1                  A  1009    	POP	BC
000239 C1                  A  1010    	POP	BC
00023A                     A  1011    L_34:
                           A  1012    ;  185			  p++;
                           A  1013    .LINE 185
                           A  1014    
00023A DD07FD              A  1015    	LD	BC,(IX+-3)
00023D DD0FDC              A  1016    	LD	(IX+-36),BC
000240 DD07FD              A  1017    	LD	BC,(IX+-3)
000243 03                  A  1018    	INC	BC
000244 DD0FFD              A  1019    	LD	(IX+-3),BC
                           A  1020    ;  186			  if ( *(p - 16) != *p )
                           A  1021    .LINE 186
                           A  1022    
000247 DD31FD              A  1023    	LD	IY,(IX+-3)
00024A FD7EF0              A  1024    	LD	A,(IY+-16)
00024D FDBE00              A  1025    	CP	A,(IY)
000250 28 16 00            A  1026    	JR	Z,L_37
                           A  1027    ;  187				  ay_write ( 12, (*p) & 0x1
                           A  1028    .LINE 187
                           A  1029    
000253 DD27FD              A  1030    	LD	HL,(IX+-3)
000256 7E                  A  1031    	LD	A,(HL)
000257 E61F                A  1032    	AND	A,31
000259 4F                  A  1033    	LD	C,A
00025A 0600                A  1034    	LD	B,0
00025C C5                  A  1035    	PUSH	BC
00025D 010C0000            A  1036    	LD	BC,12
000261 C5                  A  1037    	PUSH	BC
000262 CD 0F 04 00         A  1038    	CALL	_ay_write
000266 C1                  A  1039    	POP	BC
000267 C1                  A  1040    	POP	BC
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  21


PC     Object              I  Line    Source lib_ay-3-8912.src
000268                     A  1041    L_37:
                           A  1042    ;  188			  p++;
                           A  1043    .LINE 188
                           A  1044    
000268 DD07FD              A  1045    	LD	BC,(IX+-3)
00026B DD0FD9              A  1046    	LD	(IX+-39),BC
00026E DD07FD              A  1047    	LD	BC,(IX+-3)
000271 03                  A  1048    	INC	BC
000272 DD0FFD              A  1049    	LD	(IX+-3),BC
                           A  1050    ;  189			  if ( *(p - 16) != *p )
                           A  1051    .LINE 189
                           A  1052    
000275 DD31FD              A  1053    	LD	IY,(IX+-3)
000278 FD7EF0              A  1054    	LD	A,(IY+-16)
00027B FDBE00              A  1055    	CP	A,(IY)
00027E 28 13 00            A  1056    	JR	Z,L_40
                           A  1057    ;  190				  ay_write ( 13, *p ); // E
                           A  1058    .LINE 190
                           A  1059    
000281 DD27FD              A  1060    	LD	HL,(IX+-3)
000284 4E                  A  1061    	LD	C,(HL)
000285 0600                A  1062    	LD	B,0
000287 C5                  A  1063    	PUSH	BC
000288 010D0000            A  1064    	LD	BC,13
00028C C5                  A  1065    	PUSH	BC
00028D CD 0F 04 00         A  1066    	CALL	_ay_write
000291 C1                  A  1067    	POP	BC
000292 C1                  A  1068    	POP	BC
000293                     A  1069    L_40:
                           A  1070    ;  191			  p++;
                           A  1071    .LINE 191
                           A  1072    
000293 DD07FD              A  1073    	LD	BC,(IX+-3)
000296 DD0FD6              A  1074    	LD	(IX+-42),BC
000299 DD07FD              A  1075    	LD	BC,(IX+-3)
00029C 03                  A  1076    	INC	BC
00029D DD0FFD              A  1077    	LD	(IX+-3),BC
                           A  1078    ;  192			  if ( *(p - 16) != *p )
                           A  1079    .LINE 192
                           A  1080    
0002A0 DD31FD              A  1081    	LD	IY,(IX+-3)
0002A3 FD7EF0              A  1082    	LD	A,(IY+-16)
0002A6 FDBE00              A  1083    	CP	A,(IY)
0002A9 28 13 00            A  1084    	JR	Z,L_43
                           A  1085    ;  193				  ay_write ( 14, *p ); // E
                           A  1086    .LINE 193
                           A  1087    
0002AC DD27FD              A  1088    	LD	HL,(IX+-3)
0002AF 4E                  A  1089    	LD	C,(HL)
0002B0 0600                A  1090    	LD	B,0
0002B2 C5                  A  1091    	PUSH	BC
0002B3 010E0000            A  1092    	LD	BC,14
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  22


PC     Object              I  Line    Source lib_ay-3-8912.src
0002B7 C5                  A  1093    	PUSH	BC
0002B8 CD 0F 04 00         A  1094    	CALL	_ay_write
0002BC C1                  A  1095    	POP	BC
0002BD C1                  A  1096    	POP	BC
0002BE                     A  1097    L_43:
                           A  1098    ;  194			  p++;
                           A  1099    .LINE 194
                           A  1100    
0002BE DD07FD              A  1101    	LD	BC,(IX+-3)
0002C1 DD0FD3              A  1102    	LD	(IX+-45),BC
0002C4 DD07FD              A  1103    	LD	BC,(IX+-3)
0002C7 03                  A  1104    	INC	BC
0002C8 DD0FFD              A  1105    	LD	(IX+-3),BC
                           A  1106    ;  195			  if ( *(p - 16) != *p )
                           A  1107    .LINE 195
                           A  1108    
0002CB DD31FD              A  1109    	LD	IY,(IX+-3)
0002CE FD7EF0              A  1110    	LD	A,(IY+-16)
0002D1 FDBE00              A  1111    	CP	A,(IY)
0002D4 28 16 00            A  1112    	JR	Z,L_46
                           A  1113    ;  196				  ay_write ( 15, (*p) & 0x0
                           A  1114    .LINE 196
                           A  1115    
0002D7 DD27FD              A  1116    	LD	HL,(IX+-3)
0002DA 7E                  A  1117    	LD	A,(HL)
0002DB E60F                A  1118    	AND	A,15
0002DD 4F                  A  1119    	LD	C,A
0002DE 0600                A  1120    	LD	B,0
0002E0 C5                  A  1121    	PUSH	BC
0002E1 010F0000            A  1122    	LD	BC,15
0002E5 C5                  A  1123    	PUSH	BC
0002E6 CD 0F 04 00         A  1124    	CALL	_ay_write
0002EA C1                  A  1125    	POP	BC
0002EB C1                  A  1126    	POP	BC
0002EC                     A  1127    L_46:
                           A  1128    ;  197			  p++;
                           A  1129    .LINE 197
                           A  1130    
0002EC DD07FD              A  1131    	LD	BC,(IX+-3)
0002EF DD0FD0              A  1132    	LD	(IX+-48),BC
0002F2 DD07FD              A  1133    	LD	BC,(IX+-3)
0002F5 03                  A  1134    	INC	BC
0002F6 DD0FFD              A  1135    	LD	(IX+-3),BC
                           A  1136    ;  198	
                           A  1137    ;  199			  p++; // extended
                           A  1138    .LINE 199
                           A  1139    
0002F9 DD07FD              A  1140    	LD	BC,(IX+-3)
0002FC DD0FCD              A  1141    	LD	(IX+-51),BC
0002FF DD07FD              A  1142    	LD	BC,(IX+-3)
000302 03                  A  1143    	INC	BC
000303 DD0FFD              A  1144    	LD	(IX+-3),BC
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  23


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1145    ;  200			  p++; // extended
                           A  1146    .LINE 200
                           A  1147    
000306 DD07FD              A  1148    	LD	BC,(IX+-3)
000309 DD0FCA              A  1149    	LD	(IX+-54),BC
00030C DD07FD              A  1150    	LD	BC,(IX+-3)
00030F 03                  A  1151    	INC	BC
000310 DD0FFD              A  1152    	LD	(IX+-3),BC
                           A  1153    ;  201				
                           A  1154    ;  202			  delay_ms_spin ( 6 );
                           A  1155    .LINE 202
                           A  1156    
000313 01060000            A  1157    	LD	BC,6
000317 C5                  A  1158    	PUSH	BC
000318 CD 00 00 00         A  1159    	CALL	_delay_ms_spin
00031C C1                  A  1160    	POP	BC
00031D DD07FA              A  1161    	LD	BC,(IX+-6)
000320 03                  A  1162    	INC	BC
000321 DD0FFA              A  1163    	LD	(IX+-6),BC
                           A  1164    ;  203	
                           A  1165    ;  204			} // for iterate over song
                           A  1166    .LINE 204
                           A  1167    
000324 C3 6B 00 00 00      A  1168    	JR	L_50
                           A  1169    ;  205	
                           A  1170    ;  206		} // while forever
                           A  1171    ;  207	#endif
                           A  1172    ;  208	
                           A  1173    ;  209	    // bin from cart 0x1C0000 ...
                           A  1174    ;  210	#if 0
                           A  1175    ;  211		unsigned char *p;
                           A  1176    ;  212		unsigned int i, j;
                           A  1177    ;  213		unsigned int framelimit = 2000;
                           A  1178    ;  214	
                           A  1179    ;  215		while ( 1 ) {
                           A  1180    ;  216			p = (UCHAR*) 0x1C0000;
                           A  1181    ;  217	
                           A  1182    ;  218			// assuming not interleaved or 
                           A  1183    ;  219			for ( i=0; i < framelimit; i++ 
                           A  1184    ;  220	
                           A  1185    ;  221			  ay_write (  0, *p++ ); // A
                           A  1186    ;  222			  ay_write (  1, *p++ ); // A
                           A  1187    ;  223			  ay_write (  2, *p++ ); // B
                           A  1188    ;  224			  ay_write (  3, *p++ ); // B
                           A  1189    ;  225			  ay_write (  4, *p++ ); // C
                           A  1190    ;  226			  ay_write (  5, *p++ ); // C
                           A  1191    ;  227			  ay_write (  6, *p++ ); // Noi
                           A  1192    ;  228			  ay_write (  7, *p++ ); // Mix
                           A  1193    ;  229			  ay_write ( 10, *p++ ); // Vol
                           A  1194    ;  230			  ay_write ( 11, *p++ ); // Vol
                           A  1195    ;  231			  ay_write ( 12, *p++ ); // Vol
                           A  1196    ;  232			  ay_write ( 13, *p++ ); // Env
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  24


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1197    ;  233			  ay_write ( 14, *p++ ); // Env
                           A  1198    ;  234			  ay_write ( 15, *p++ ); // Env
                           A  1199    ;  235			  p++; // extended
                           A  1200    ;  236			  p++; // extended
                           A  1201    ;  237				
                           A  1202    ;  238			  delay_ms_spin ( 30 );
                           A  1203    ;  239	
                           A  1204    ;  240			} // for iterate over song
                           A  1205    ;  241	
                           A  1206    ;  242		} // while forever
                           A  1207    ;  243	#endif
                           A  1208    ;  244	
                           A  1209    ;  245	    // test song
                           A  1210    ;  246	#if 0
                           A  1211    ;  247	    int i;
                           A  1212    ;  248	    for ( i=0; i< 47; i++ ) {
                           A  1213    ;  249	      ay_set_chA ( song[i][0] );
                           A  1214    ;  250	     delay_ms_spin ( song[i][1]);   
                           A  1215    ;  251	    }
                           A  1216    ;  252	#endif
                           A  1217    ;  253	
                           A  1218    ;  254	#if 0 // stairway
                           A  1219    ;  255		{
                           A  1220    ;  256			uint16_t progression [ 20 ] = {
                           A  1221    ;  257				A_FREQ, Asharp_FREQ,
                           A  1222    ;  258				B_FREQ,
                           A  1223    ;  259				C_FREQ, Csharp_FREQ,
                           A  1224    ;  260				D_FREQ, Dsharp_FREQ,
                           A  1225    ;  261				E_FREQ,
                           A  1226    ;  262				F_FREQ, Fsharp_FREQ,
                           A  1227    ;  263				G_FREQ, Gsharp_FREQ,
                           A  1228    ;  264				0 /* end */
                           A  1229    ;  265			};
                           A  1230    ;  266			
                           A  1231    ;  267			uint8_t i = 0;
                           A  1232    ;  268			
                           A  1233    ;  269			while (1) {
                           A  1234    ;  270	
                           A  1235    ;  271				// play note
                           A  1236    ;  272				
                           A  1237    ;  273				ay_write ( 0x08, 0x0F );   
                           A  1238    ;  274				ay_write ( 0x00, progressio
                           A  1239    ;  275				ay_write ( 0x01, progressio
                           A  1240    ;  276				ay_write ( 0x07, 0x3E );   
                           A  1241    ;  277				
                           A  1242    ;  278				delay_ms_spin(70);
                           A  1243    ;  279	
                           A  1244    ;  280				// next
                           A  1245    ;  281				i++;
                           A  1246    ;  282				
                           A  1247    ;  283				if ( progression [ i ] == 0
                           A  1248    ;  284					i = 0;
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  25


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1249    ;  285				}
                           A  1250    ;  286				
                           A  1251    ;  287			} // while
                           A  1252    ;  288			
                           A  1253    ;  289		}
                           A  1254    ;  290	#endif
                           A  1255    ;  291		
                           A  1256    ;  292	#if 0
                           A  1257    ;  293	    int i;
                           A  1258    ;  294	
                           A  1259    ;  295	    for(i=0;i<8;i++){
                           A  1260    ;  296	      ay_set_chA(48);
                           A  1261    ;  297	      delay_ms_spin(70);
                           A  1262    ;  298	      ay_set_chA(60);   
                           A  1263    ;  299	      delay_ms_spin(70);
                           A  1264    ;  300	    }  
                           A  1265    ;  301	
                           A  1266    ;  302	    for( i=0;i<4;i++){
                           A  1267    ;  303	      ay_set_chA(53);
                           A  1268    ;  304	      delay_ms_spin(70);
                           A  1269    ;  305	      ay_set_chA(65);
                           A  1270    ;  306	      delay_ms_spin(70);
                           A  1271    ;  307	    }
                           A  1272    ;  308	
                           A  1273    ;  309	    for( i=0;i<4;i++){
                           A  1274    ;  310	      ay_set_chA(55);
                           A  1275    ;  311	      delay_ms_spin(70);
                           A  1276    ;  312	      ay_set_chA(67);
                           A  1277    ;  313	      delay_ms_spin(70);
                           A  1278    ;  314	    }
                           A  1279    ;  315	#endif
                           A  1280    ;  316	
                           A  1281    ;  317	#if 0 // effect .. laser shot?
                           A  1282    ;  318		while (1) {
                           A  1283    ;  319			// decaying laser shot; more li
                           A  1284    ;  320			ay_write ( 0x06, 0x11);
                           A  1285    ;  321			ay_write ( 0x07, 0x07);
                           A  1286    ;  322			ay_write ( 0x08, 0x10);
                           A  1287    ;  323			ay_write ( 0x09, 0x10);
                           A  1288    ;  324			ay_write ( 0x0a, 0x10);
                           A  1289    ;  325			ay_write ( 0x0c, 0x10);
                           A  1290    ;  326			ay_write ( 0x0d, 0x00);
                           A  1291    ;  327			delay_ms_spin ( 200 ); 
                           A  1292    ;  328	
                           A  1293    ;  329			// echoey noise ba ba ba baaa..
                           A  1294    ;  330			ay_write ( 0x06, 0x00);
                           A  1295    ;  331			ay_write ( 0x07, 0x07);
                           A  1296    ;  332			ay_write ( 0x08, 0x10);
                           A  1297    ;  333			ay_write ( 0x09, 0x10);
                           A  1298    ;  334			ay_write ( 0x0a, 0x10);
                           A  1299    ;  335			ay_write ( 0x0c, 0x38);
                           A  1300    ;  336			ay_write ( 0x0d, 0x00);
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  26


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1301    ;  337			delay_ms_spin ( 200 );  
                           A  1302    ;  338			
                           A  1303    ;  339			// next
                           A  1304    ;  340			delay_ms_spin ( 400 );  
                           A  1305    ;  341					
                           A  1306    ;  342		} // while
                           A  1307    ;  343	#endif
                           A  1308    ;  344	
                           A  1309    ;  345	  } // while forever
                           A  1310    ;  346	
                           A  1311    ;  347	  return;
                           A  1312    ;  348	}
                           A  1313    .LINE 348
                           A  1314    
000329 DDF9                A  1315    	LD	SP,IX
00032B DDE1                A  1316    	POP	IX
00032D C9                  A  1317    	RET	
                           A  1318    
                           A  1319    
                           A  1320    ;**************************** _ym_play_demo ***
                           A  1321    ;Name                         Addr/Register   S
                           A  1322    ;_delay_ms_spin                      IMPORT  --
                           A  1323    ;_framelimit                         IMPORT    
                           A  1324    ;_song_hacked_ym                     IMPORT  un
                           A  1325    ;_ay_write                           IMPORT  --
                           A  1326    ;i                                     IX-6    
                           A  1327    ;p                                     IX-3    
                           A  1328    
                           A  1329    
                           A  1330    ; Stack Frame Size: 60 (bytes)
                           A  1331    ;       Spill Code: 0 (instruction)
                           A  1332    
                           A  1333    
                           A  1334    .ENDFUNC "ym_play_demo",348,"_ym_play_demo"
                           A  1335    ;  349	
                           A  1336    ;  350	void ay_set_chA ( int i ) {
00032E                     A  1337    _ay_set_chA:
                           A  1338    .DEFINE "_ay_set_chA"
                           A  1339    
                           A  1340    .VALUE _ay_set_chA
                           A  1341    
                           A  1342    .CLASS 2
                           A  1343    
                           A  1344    .TYPE 65
                           A  1345    
                           A  1346    .ENDEF
                           A  1347    
                           A  1348    .BEGFUNC "ay_set_chA",350,"_ay_set_chA"
                           A  1349    
                           A  1350    .LINE 350
                           A  1351    
                           A  1352    .DEFINE "i"
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  27


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1353    
                           A  1354    .CLASS 65
                           A  1355    
                           A  1356    .VALUE 6
                           A  1357    
                           A  1358    .TYPE 4
                           A  1359    
                           A  1360    .ENDEF
                           A  1361    
00032E DDE5                A  1362    	PUSH	IX
000330 DD210000 00         A  1363    	LD	IX,0
000335 DD39                A  1364    	ADD	IX,SP
                           A  1365    ;  351	  ay_write ( 0x00, tp[i]&0xff );
                           A  1366    .LINE 351
                           A  1367    
000337 DD2706              A  1368    	LD	HL,(IX+6)
00033A 29                  A  1369    	ADD	HL,HL
00033B 01 00 00 00         A  1370    	LD	BC,_tp
00033F 09                  A  1371    	ADD	HL,BC
000340 4E                  A  1372    	LD	C,(HL)
000341 0600                A  1373    	LD	B,0
000343 C5E1                A  1374    	LD	HL,BC
000345 4D                  A  1375    	LD	C,L
000346 C5                  A  1376    	PUSH	BC
000347 01000000            A  1377    	LD	BC,0
00034B C5                  A  1378    	PUSH	BC
00034C CD 0F 04 00         A  1379    	CALL	_ay_write
000350 C1                  A  1380    	POP	BC
000351 C1                  A  1381    	POP	BC
                           A  1382    ;  352	  ay_write ( 0x01, (tp[i] >> 8)&0x0f );
                           A  1383    .LINE 352
                           A  1384    
000352 DD2706              A  1385    	LD	HL,(IX+6)
000355 29                  A  1386    	ADD	HL,HL
000356 01 00 00 00         A  1387    	LD	BC,_tp
00035A 09                  A  1388    	ADD	HL,BC
00035B ED07                A  1389    	LD	BC,(HL)
00035D CD 00 00 00         A  1390    	CALL	__stoiu
000361 3E08                A  1391    	LD	A,8
000363 CD 00 00 00         A  1392    	CALL	__ishrs_b
000367 7D                  A  1393    	LD	A,L
000368 E60F                A  1394    	AND	A,15
00036A 4F                  A  1395    	LD	C,A
00036B 0600                A  1396    	LD	B,0
00036D C5                  A  1397    	PUSH	BC
00036E 01010000            A  1398    	LD	BC,1
000372 C5                  A  1399    	PUSH	BC
000373 CD 0F 04 00         A  1400    	CALL	_ay_write
000377 C1                  A  1401    	POP	BC
000378 C1                  A  1402    	POP	BC
                           A  1403    ;  353	}
                           A  1404    .LINE 353
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  28


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1405    
000379 DDF9                A  1406    	LD	SP,IX
00037B DDE1                A  1407    	POP	IX
00037D C9                  A  1408    	RET	
                           A  1409    
                           A  1410    
                           A  1411    ;**************************** _ay_set_chA *****
                           A  1412    ;Name                         Addr/Register   S
                           A  1413    ;_tp                                 STATIC    
                           A  1414    ;_ay_write                           IMPORT  --
                           A  1415    ;i                                     IX+6    
                           A  1416    
                           A  1417    
                           A  1418    ; Stack Frame Size: 9 (bytes)
                           A  1419    ;       Spill Code: 0 (instruction)
                           A  1420    
                           A  1421    
                           A  1422    .ENDFUNC "ay_set_chA",353,"_ay_set_chA"
                           A  1423    ;  354	
                           A  1424    ;  355	void ay_set_chB ( int i ) {
00037E                     A  1425    _ay_set_chB:
                           A  1426    .DEFINE "_ay_set_chB"
                           A  1427    
                           A  1428    .VALUE _ay_set_chB
                           A  1429    
                           A  1430    .CLASS 2
                           A  1431    
                           A  1432    .TYPE 65
                           A  1433    
                           A  1434    .ENDEF
                           A  1435    
                           A  1436    .BEGFUNC "ay_set_chB",355,"_ay_set_chB"
                           A  1437    
                           A  1438    .LINE 355
                           A  1439    
                           A  1440    .DEFINE "i"
                           A  1441    
                           A  1442    .CLASS 65
                           A  1443    
                           A  1444    .VALUE 6
                           A  1445    
                           A  1446    .TYPE 4
                           A  1447    
                           A  1448    .ENDEF
                           A  1449    
00037E DDE5                A  1450    	PUSH	IX
000380 DD210000 00         A  1451    	LD	IX,0
000385 DD39                A  1452    	ADD	IX,SP
                           A  1453    ;  356	  ay_write ( 0x02, tp[i]&0xff );
                           A  1454    .LINE 356
                           A  1455    
000387 DD2706              A  1456    	LD	HL,(IX+6)
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  29


PC     Object              I  Line    Source lib_ay-3-8912.src
00038A 29                  A  1457    	ADD	HL,HL
00038B 01 00 00 00         A  1458    	LD	BC,_tp
00038F 09                  A  1459    	ADD	HL,BC
000390 4E                  A  1460    	LD	C,(HL)
000391 0600                A  1461    	LD	B,0
000393 C5E1                A  1462    	LD	HL,BC
000395 4D                  A  1463    	LD	C,L
000396 C5                  A  1464    	PUSH	BC
000397 01020000            A  1465    	LD	BC,2
00039B C5                  A  1466    	PUSH	BC
00039C CD 0F 04 00         A  1467    	CALL	_ay_write
0003A0 C1                  A  1468    	POP	BC
0003A1 C1                  A  1469    	POP	BC
                           A  1470    ;  357	  ay_write ( 0x03, (tp[i] >> 8)&0x0f );
                           A  1471    .LINE 357
                           A  1472    
0003A2 DD2706              A  1473    	LD	HL,(IX+6)
0003A5 29                  A  1474    	ADD	HL,HL
0003A6 01 00 00 00         A  1475    	LD	BC,_tp
0003AA 09                  A  1476    	ADD	HL,BC
0003AB ED07                A  1477    	LD	BC,(HL)
0003AD CD 00 00 00         A  1478    	CALL	__stoiu
0003B1 3E08                A  1479    	LD	A,8
0003B3 CD 00 00 00         A  1480    	CALL	__ishrs_b
0003B7 7D                  A  1481    	LD	A,L
0003B8 E60F                A  1482    	AND	A,15
0003BA 4F                  A  1483    	LD	C,A
0003BB 0600                A  1484    	LD	B,0
0003BD C5                  A  1485    	PUSH	BC
0003BE 01030000            A  1486    	LD	BC,3
0003C2 C5                  A  1487    	PUSH	BC
0003C3 CD 0F 04 00         A  1488    	CALL	_ay_write
0003C7 C1                  A  1489    	POP	BC
0003C8 C1                  A  1490    	POP	BC
                           A  1491    ;  358	}
                           A  1492    .LINE 358
                           A  1493    
0003C9 DDF9                A  1494    	LD	SP,IX
0003CB DDE1                A  1495    	POP	IX
0003CD C9                  A  1496    	RET	
                           A  1497    
                           A  1498    
                           A  1499    ;**************************** _ay_set_chB *****
                           A  1500    ;Name                         Addr/Register   S
                           A  1501    ;_tp                                 STATIC    
                           A  1502    ;_ay_write                           IMPORT  --
                           A  1503    ;i                                     IX+6    
                           A  1504    
                           A  1505    
                           A  1506    ; Stack Frame Size: 9 (bytes)
                           A  1507    ;       Spill Code: 0 (instruction)
                           A  1508    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  30


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1509    
                           A  1510    .ENDFUNC "ay_set_chB",358,"_ay_set_chB"
                           A  1511    ;  359	
                           A  1512    ;  360	void ay_gpio_setup ( void ) {
0003CE                     A  1513    _ay_gpio_setup:
                           A  1514    .DEFINE "_ay_gpio_setup"
                           A  1515    
                           A  1516    .VALUE _ay_gpio_setup
                           A  1517    
                           A  1518    .CLASS 2
                           A  1519    
                           A  1520    .TYPE 65
                           A  1521    
                           A  1522    .ENDEF
                           A  1523    
                           A  1524    .BEGFUNC "ay_gpio_setup",360,"_ay_gpio_setup"
                           A  1525    
                           A  1526    .LINE 360
                           A  1527    
                           A  1528    .DEFINE "pc"
                           A  1529    
                           A  1530    .CLASS 65
                           A  1531    
                           A  1532    .VALUE -4
                           A  1533    
                           A  1534    .TAG "NONAME0"
                           A  1535    
                           A  1536    .TYPE 8
                           A  1537    
                           A  1538    .ENDEF
                           A  1539    
                           A  1540    .DEFINE "err"
                           A  1541    
                           A  1542    .CLASS 65
                           A  1543    
                           A  1544    .VALUE -5
                           A  1545    
                           A  1546    .TYPE 12
                           A  1547    
                           A  1548    .ENDEF
                           A  1549    
0003CE DDE5                A  1550    	PUSH	IX
0003D0 DD210000 00         A  1551    	LD	IX,0
0003D5 DD39                A  1552    	ADD	IX,SP
0003D7 C5                  A  1553    	PUSH	BC
0003D8 3B                  A  1554    	DEC	SP
0003D9 3B                  A  1555    	DEC	SP
                           A  1556    ;  361	
                           A  1557    ;  362		PORT pc;
                           A  1558    ;  363		UCHAR err;
                           A  1559    ;  364			
                           A  1560    ;  365		pc.dr = 0x01;
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  31


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1561    .LINE 365
                           A  1562    
0003DA DD36FC01            A  1563    	LD	(IX+-4),1
                           A  1564    ;  366		pc.ddr = 0; // 0 ddr is output
                           A  1565    .LINE 366
                           A  1566    
0003DE DD36FD00            A  1567    	LD	(IX+-3),0
                           A  1568    ;  367		//pc.alt0 = 0; // does not exist fo
                           A  1569    ;  368		pc.alt1 = 0;
                           A  1570    .LINE 368
                           A  1571    
0003E2 DD36FE00            A  1572    	LD	(IX+-2),0
                           A  1573    ;  369		pc.alt2 = 0;
                           A  1574    .LINE 369
                           A  1575    
0003E6 DD36FF00            A  1576    	LD	(IX+-1),0
                           A  1577    ;  370			
                           A  1578    ;  371		open_PortB ( &pc );
                           A  1579    .LINE 371
                           A  1580    
0003EA ED65FC              A  1581    	PEA	IX+-4
0003ED CD 00 00 00         A  1582    	CALL	_open_PortB
0003F1 C1                  A  1583    	POP	BC
                           A  1584    ;  372		//control_PortC ( & pc);
                           A  1585    ;  373	
                           A  1586    ;  374		err = setmode_PortB ( PORTPIN_ALL, 
                           A  1587    .LINE 374
                           A  1588    
0003F2 01010000            A  1589    	LD	BC,1
0003F6 C5                  A  1590    	PUSH	BC
0003F7 01FF0000            A  1591    	LD	BC,255
0003FB C5                  A  1592    	PUSH	BC
0003FC CD 00 00 00         A  1593    	CALL	_setmode_PortB
000400 C1                  A  1594    	POP	BC
000401 C1                  A  1595    	POP	BC
000402 DD77FB              A  1596    	LD	(IX+-5),A
                           A  1597    ;  375			
                           A  1598    ;  376		SETDR_PORTB ( 1 );
                           A  1599    .LINE 376
                           A  1600    
000405 3E01                A  1601    	LD	A,1
000407 ED399A              A  1602    	OUT0	(154),A
                           A  1603    ;  377	
                           A  1604    ;  378		return;
                           A  1605    ;  379	}
                           A  1606    .LINE 379
                           A  1607    
00040A DDF9                A  1608    	LD	SP,IX
00040C DDE1                A  1609    	POP	IX
00040E C9                  A  1610    	RET	
                           A  1611    
                           A  1612    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  32


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1613    ;**************************** _ay_gpio_setup **
                           A  1614    ;Name                         Addr/Register   S
                           A  1615    ;_setmode_PortB                      IMPORT  --
                           A  1616    ;_open_PortB                         IMPORT  --
                           A  1617    ;err                                   IX-5    
                           A  1618    ;pc                                    IX-4    
                           A  1619    
                           A  1620    
                           A  1621    ; Stack Frame Size: 11 (bytes)
                           A  1622    ;       Spill Code: 0 (instruction)
                           A  1623    
                           A  1624    
                           A  1625    .ENDFUNC "ay_gpio_setup",379,"_ay_gpio_setup"
                           A  1626    ;  380	
                           A  1627    ;  381	#pragma noopt
                           A  1628    ;  382	#define BC1_0 ((UINT8*)0x2C0000)
                           A  1629    ;  383	#define BC1_1 ((UINT8*)0x2C0001)
                           A  1630    ;  384	UINT8 ay_write ( unsigned char address,
00040F                     A  1631    _ay_write:
                           A  1632    .DEFINE "_ay_write"
                           A  1633    
                           A  1634    .VALUE _ay_write
                           A  1635    
                           A  1636    .CLASS 2
                           A  1637    
                           A  1638    .TYPE 76
                           A  1639    
                           A  1640    .ENDEF
                           A  1641    
                           A  1642    .BEGFUNC "ay_write",384,"_ay_write"
                           A  1643    
                           A  1644    .LINE 384
                           A  1645    
                           A  1646    .DEFINE "address"
                           A  1647    
                           A  1648    .CLASS 65
                           A  1649    
                           A  1650    .VALUE 6
                           A  1651    
                           A  1652    .TYPE 12
                           A  1653    
                           A  1654    .ENDEF
                           A  1655    
                           A  1656    .DEFINE "data"
                           A  1657    
                           A  1658    .CLASS 65
                           A  1659    
                           A  1660    .VALUE 9
                           A  1661    
                           A  1662    .TYPE 12
                           A  1663    
                           A  1664    .ENDEF
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  33


PC     Object              I  Line    Source lib_ay-3-8912.src
                           A  1665    
                           A  1666    .DEFINE "psg"
                           A  1667    
                           A  1668    .CLASS 65
                           A  1669    
                           A  1670    .VALUE -3
                           A  1671    
                           A  1672    .TYPE 44
                           A  1673    
                           A  1674    .ENDEF
                           A  1675    
                           A  1676    .DEFINE "dummy"
                           A  1677    
                           A  1678    .CLASS 65
                           A  1679    
                           A  1680    .VALUE -4
                           A  1681    
                           A  1682    .TYPE 12
                           A  1683    
                           A  1684    .ENDEF
                           A  1685    
00040F DDE5                A  1686    	PUSH	IX
000411 DD210000 00         A  1687    	LD	IX,0
000416 DD39                A  1688    	ADD	IX,SP
000418 C5                  A  1689    	PUSH	BC
000419 3B                  A  1690    	DEC	SP
                           A  1691    ;  385	
                           A  1692    ;  386		// latch operation: bc1=1 bdir=1
                           A  1693    ;  387		// inactive operation: bc1=0 bdir=0
                           A  1694    ;  388		// write operation: bc1=0 bdir=1
                           A  1695    ;  389		// read operation: bc1=1 bdir=0
                           A  1696    ;  390		
                           A  1697    ;  391		// bc1 == A0
                           A  1698    ;  392		// bdir = read/write, no worries
                           A  1699    ;  393		// A8 is chipselect, no worries
                           A  1700    ;  394	
                           A  1701    ;  395		// so set _our_ bus address to 0x2C
                           A  1702    ;  396		// latch
                           A  1703    ;  397		// 	 send address into data bus
                           A  1704    ;  398		// inactive
                           A  1705    ;  399		// send data into data bus
                           A  1706    ;  400		// inactive
                           A  1707    ;  401	
                           A  1708    ;  402		UINT8 *psg;
                           A  1709    ;  403		UINT8 dummy;
                           A  1710    ;  404	
                           A  1711    ;  405		//PB_DR ^= 1; // TEST
                           A  1712    ;  406	
                           A  1713    ;  407		// inactive
                           A  1714    ;  408		psg = BC1_0;
                           A  1715    .LINE 408
                           A  1716    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  34


PC     Object              I  Line    Source lib_ay-3-8912.src
00041A 0100002C            A  1717    	LD	BC,2883584
00041E DD0FFD              A  1718    	LD	(IX+-3),BC
                           A  1719    ;  409		dummy = *psg;
                           A  1720    .LINE 409
                           A  1721    
000421 DD27FD              A  1722    	LD	HL,(IX+-3)
000424 7E                  A  1723    	LD	A,(HL)
000425 DD77FC              A  1724    	LD	(IX+-4),A
                           A  1725    ;  410	    delay_loop ( 20 );
                           A  1726    .LINE 410
                           A  1727    
000428 01140000            A  1728    	LD	BC,20
00042C C5                  A  1729    	PUSH	BC
00042D CD 00 00 00         A  1730    	CALL	_delay_loop
000431 C1                  A  1731    	POP	BC
                           A  1732    ;  411		
                           A  1733    ;  412		// latch and write address
                           A  1734    ;  413		PB_DR = address & 0x0F;
                           A  1735    .LINE 413
                           A  1736    
000432 DD7E06              A  1737    	LD	A,(IX+6)
000435 E60F                A  1738    	AND	A,15
000437 ED399A              A  1739    	OUT0	(154),A
                           A  1740    ;  414		psg = BC1_1;
                           A  1741    .LINE 414
                           A  1742    
00043A 0101002C            A  1743    	LD	BC,2883585
00043E DD0FFD              A  1744    	LD	(IX+-3),BC
                           A  1745    ;  415		*psg = address & 0x0F;
                           A  1746    .LINE 415
                           A  1747    
000441 DD7E06              A  1748    	LD	A,(IX+6)
000444 E60F                A  1749    	AND	A,15
000446 DD27FD              A  1750    	LD	HL,(IX+-3)
000449 77                  A  1751    	LD	(HL),A
                           A  1752    ;  416	    delay_loop ( 20 );
                           A  1753    .LINE 416
                           A  1754    
00044A 01140000            A  1755    	LD	BC,20
00044E C5                  A  1756    	PUSH	BC
00044F CD 00 00 00         A  1757    	CALL	_delay_loop
000453 C1                  A  1758    	POP	BC
                           A  1759    ;  417		
                           A  1760    ;  418		// inactive
                           A  1761    ;  419		psg = BC1_0;
                           A  1762    .LINE 419
                           A  1763    
000454 0100002C            A  1764    	LD	BC,2883584
000458 DD0FFD              A  1765    	LD	(IX+-3),BC
                           A  1766    ;  420		dummy = *psg;
                           A  1767    .LINE 420
                           A  1768    
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  35


PC     Object              I  Line    Source lib_ay-3-8912.src
00045B DD27FD              A  1769    	LD	HL,(IX+-3)
00045E 7E                  A  1770    	LD	A,(HL)
00045F DD77FC              A  1771    	LD	(IX+-4),A
                           A  1772    ;  421	    delay_loop ( 20 );
                           A  1773    .LINE 421
                           A  1774    
000462 01140000            A  1775    	LD	BC,20
000466 C5                  A  1776    	PUSH	BC
000467 CD 00 00 00         A  1777    	CALL	_delay_loop
00046B C1                  A  1778    	POP	BC
                           A  1779    ;  422		
                           A  1780    ;  423		// write data
                           A  1781    ;  424		PB_DR = data;
                           A  1782    .LINE 424
                           A  1783    
00046C DD7E09              A  1784    	LD	A,(IX+9)
00046F ED399A              A  1785    	OUT0	(154),A
                           A  1786    ;  425		psg = BC1_0;
                           A  1787    .LINE 425
                           A  1788    
000472 0100002C            A  1789    	LD	BC,2883584
000476 DD0FFD              A  1790    	LD	(IX+-3),BC
                           A  1791    ;  426		*psg = data;
                           A  1792    .LINE 426
                           A  1793    
000479 DD27FD              A  1794    	LD	HL,(IX+-3)
00047C DD7E09              A  1795    	LD	A,(IX+9)
00047F 77                  A  1796    	LD	(HL),A
                           A  1797    ;  427	    delay_loop ( 20 );
                           A  1798    .LINE 427
                           A  1799    
000480 01140000            A  1800    	LD	BC,20
000484 C5                  A  1801    	PUSH	BC
000485 CD 00 00 00         A  1802    	CALL	_delay_loop
000489 C1                  A  1803    	POP	BC
                           A  1804    ;  428		
                           A  1805    ;  429		// inactive
                           A  1806    ;  430		psg = BC1_0;
                           A  1807    .LINE 430
                           A  1808    
00048A 0100002C            A  1809    	LD	BC,2883584
00048E DD0FFD              A  1810    	LD	(IX+-3),BC
                           A  1811    ;  431		dummy = *psg;
                           A  1812    .LINE 431
                           A  1813    
000491 DD27FD              A  1814    	LD	HL,(IX+-3)
000494 7E                  A  1815    	LD	A,(HL)
000495 DD77FC              A  1816    	LD	(IX+-4),A
                           A  1817    ;  432	    delay_loop ( 20 );
                           A  1818    .LINE 432
                           A  1819    
000498 01140000            A  1820    	LD	BC,20
Zilog eZ80 Macro Assembler Version 4.2 (11121401)06-Nov-15     17:12:26     page:  36


PC     Object              I  Line    Source lib_ay-3-8912.src
00049C C5                  A  1821    	PUSH	BC
00049D CD 00 00 00         A  1822    	CALL	_delay_loop
0004A1 C1                  A  1823    	POP	BC
                           A  1824    ;  433		
                           A  1825    ;  434		//PB_DR = 0;
                           A  1826    ;  435		
                           A  1827    ;  436		return ( dummy );
                           A  1828    .LINE 436
                           A  1829    
0004A2 DD7EFC              A  1830    	LD	A,(IX+-4)
                           A  1831    ;  437	}
                           A  1832    .LINE 437
                           A  1833    
0004A5 DDF9                A  1834    	LD	SP,IX
0004A7 DDE1                A  1835    	POP	IX
0004A9 C9                  A  1836    	RET	
                           A  1837    
                           A  1838    
                           A  1839    ;**************************** _ay_write *******
                           A  1840    ;Name                         Addr/Register   S
                           A  1841    ;dummy                                 IX-4    
                           A  1842    ;psg                                   IX-3    
                           A  1843    ;data                                  IX+9    
                           A  1844    ;address                               IX+6    
                           A  1845    
                           A  1846    
                           A  1847    ; Stack Frame Size: 16 (bytes)
                           A  1848    ;       Spill Code: 0 (instruction)
                           A  1849    
                           A  1850    
                           A  1851    .ENDFUNC "ay_write",437,"_ay_write"
                           A  1852    	XREF _song_hacked_ym:ROM
                           A  1853    	XREF _framelimit:ROM
                           A  1854    	XREF _delay_ms_spin:ROM
                           A  1855    	XREF _setmode_PortB:ROM
                           A  1856    	XREF _open_PortB:ROM
                           A  1857    	XREF __stoiu:ROM
                           A  1858    	XREF __icmpzero:ROM
                           A  1859    	XREF __ishrs_b:ROM
                           A  1860    	XDEF _ay_write
                           A  1861    	XDEF _ay_gpio_setup
                           A  1862    	XDEF _ay_set_chB
                           A  1863    	XDEF _ay_set_chA
                           A  1864    	XDEF _ym_play_demo
                           A  1865    	XDEF _song
                           A  1866    	XDEF _tp
                           A  1867    	END


Errors: 0
Warnings: 0
Lines Assembled: 1868
